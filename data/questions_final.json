{
  "schema_version": "1.0",
  "questions": [
    {
      "id": "q_u1_t1_mcq_001",
      "type": "mcq",
      "unit_id": "u1",
      "topic_id": "u1_t1_intro-ai-core-launchpad",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best reflects a primary capability of SAP AI Core described in this lesson?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The lesson introduces using SAP AI Core and AI Launchpad on SAP BTP, including objectives around process understanding and connecting to Docker and GitHub. It highlights enterprise-grade features for productizing and operating AI models and emphasizes balancing performance and cost."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Orchestrating AI workflows such as model training, batch inference, and serving models"
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states these are the main capabilities provided by SAP AI Core."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Providing native data warehousing within SAP AI Core itself"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Data can be extracted from SAP HANA Cloud or other storage; AI Core is not described as a data warehouse."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Replacing Docker and GitHub by offering built-in container registry and code repository"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The lesson mentions connecting AI Core/Launchpad to users’ Docker and GitHub, not replacing them."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focusing on real-time ETL pipelines for transactional databases"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "ETL focus is not described; the emphasis is on AI workflow orchestration and serving."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Exclusively supporting CPU-based workloads to reduce cost"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text highlights accelerated performance with GPU support, not CPU-only."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["overview", "capabilities", "sap-ai-core"],
      "concept_tags": [
        "workflow-orchestration",
        "serving",
        "training",
        "batch-inference"
      ],
      "context_tags": ["sap-btp", "launchpad", "docker", "github"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for wording that groups multiple AI lifecycle steps together."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Eliminate options that suggest replacing Docker/GitHub or acting as a data warehouse."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think OBS: Orchestrate, Batch, Serve—core actions of AI Core."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "SAP AI Core centers on enterprise-grade orchestration of AI workflows—training, batch inference, and model serving—while integrating with external data sources and developer tools."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How do training, batch inference, and serving relate to connecting Docker and GitHub in your workflow?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A team uses Docker images from GitHub workflows to train a model in AI Core, runs batch inference jobs, then serves the model via an AI API."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u1_t2_mcq_001",
      "type": "mcq",
      "unit_id": "u1",
      "topic_id": "u1_t2-ai-core-capabilities",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best reflects the managed capabilities and value proposition described for SAP AI Core and SAP AI Launchpad?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context highlights managed AI lifecycle operations, tenant isolation via multi-tenancy, pay-for-use scalability leveraging GPUs, framework openness, REST-based model serving, and a web application that centralizes management and monitoring of AI across services."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They provide managed, end-to-end AI lifecycle support with multi-tenancy, scalable GPU-backed resources, and centralized model operations via a web application."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states managed functionality across onboarding-to-inference, tenant isolation, GPU-powered scalability, and centralized operations via SAP AI Launchpad."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They require customers to build custom orchestration for training and deployment while only offering inference hosting."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Contradicted: the service offers out-of-the-box managed lifecycle including training, deployment, and serving."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They lock customers into a single AI framework to simplify delivery pipelines."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text emphasizes openness to any AI framework, not lock-in."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They eliminate the need for REST endpoints by mandating only SDK-based access."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Incorrect: model serving (inference) via REST endpoint is explicitly mentioned."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They offer fixed-capacity CPU-only environments to safeguard costs regardless of workload."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Unsupported and conflicting: the text notes on-demand scalability with GPU-powered performance and pay-for-use."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": [
        "ai-core",
        "launchpad",
        "multi-tenancy",
        "scalability",
        "rest-serving"
      ],
      "concept_tags": [
        "managed-ai-lifecycle",
        "centralized-operations",
        "gpu-scalability"
      ],
      "context_tags": ["sap-ai-core", "sap-ai-launchpad", "ai-api"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Identify mentions of lifecycle stages and how they are managed end-to-end."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for cues about openness to frameworks, REST serving, and GPU-backed scalability."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "MORe: Managed lifecycle, Openness, REST serving—powered by GPUs and centralized oversight."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Option A synthesizes the text: SAP AI Core manages the full workflow with multi-tenancy and scalable GPU resources, while SAP AI Launchpad centralizes operations across services."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which phrases in the text indicate both management breadth (end-to-end) and infrastructure scalability?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A team onboards data, trains a model, deploys it, and serves inference via REST while monitoring via Launchpad across multiple tenants."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u1_t3_mcq_001",
      "type": "mcq",
      "unit_id": "u1",
      "topic_id": "u1_t3-launchpad-lifecycle",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best captures a key benefit of using SAP AI Launchpad for managing the AI lifecycle?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "SAP AI Launchpad aims to standardize how models are trained, deployed, and monitored across technologies, while SAP AI Core supports isolated customer environments via resource groups and GitOps-based configuration."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It provides uniform model status and standardized training/deployment to increase transparency across technologies."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text highlights uniform model status and uniform training/deployment that increase transparency."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It allows unrestricted cross-tenant access to accelerate collaboration on AI assets."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states assets are safe per tenant and cannot be accessed by other customers."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It eliminates the need for monitoring and retraining once models are deployed."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text emphasizes monitoring and simplified retraining to continuously improve performance."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It replaces Git repositories with a proprietary template store for version control."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text says you can use your own Git repository for version control during GitOps onboarding."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It enables bypassing initial setup steps when configuring SAP AI Core."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "A note states initial setup tasks must be completed before configuring SAP AI Core."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": [
        "ai-lifecycle",
        "launchpad",
        "transparency",
        "deployment",
        "monitoring"
      ],
      "concept_tags": [
        "uniform-model-status",
        "standardized-training-deployment",
        "tenant-isolation"
      ],
      "context_tags": ["sap-ai-launchpad", "sap-ai-core", "gitops"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for wording about consistency across different underlying technologies."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Eliminate options that conflict with tenant isolation or monitoring/retraining."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think U-T-M: Uniform status, Training/Deployment standardization, More transparency."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The passage emphasizes that SAP AI Launchpad delivers uniform model status and standardized training/deployment, which together increase transparency across technologies."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How does standardizing training and deployment contribute to transparency in multi-technology environments?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A team using different frameworks can still see consistent model statuses and follow the same deployment steps via Launchpad."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u1_t4_rg_mcq_001",
      "type": "mcq",
      "unit_id": "u1",
      "topic_id": "u1_t4-resource-groups",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "In SAP AI Core, which statement best describes the role of a resource group when registering and using datasets?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Resource groups in SAP AI Core define isolated workspaces for entities like configurations, executions, deployments, artifacts, and datasets. Object store secrets connect to hyperscaler storage to provide dataset access, while visibility and access are limited to allowed users within a given resource group."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It is the isolated workspace that scopes visibility and access to datasets and related entities for allowed users."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text defines a resource group as a unique workspace; dataset registration assumes its creation and visibility is limited to allowed users."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It is a global container that automatically shares datasets and templates across all tenants."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context states assets cannot be accessed by other tenants; visibility is restricted."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It replaces the need for an object store secret by embedding storage credentials in the dataset metadata."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text specifies connecting via an object store secret to manage access; no embedding replacement is described."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It only groups executions; datasets and artifacts are managed outside of it."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Resource groups cover configurations, executions, deployments, artifacts, and datasets—not executions alone."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It mainly optimizes storage costs by compressing datasets inside SAP AI Core."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Cost-effectiveness is attributed to hyperscaler object stores; no compression role of resource groups is mentioned."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["SAP AI Core", "resource groups", "datasets"],
      "concept_tags": ["isolation", "access control", "workspace scoping"],
      "context_tags": ["object store secret", "hyperscaler storage"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on isolation and access boundaries described for resource groups."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Differentiate the role of resource groups from that of object store secrets."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "RG = Restricted Group: restricts who sees and uses datasets and related assets."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Resource groups act as unique, isolated workspaces; dataset registration presumes a resource group whose visibility is limited to allowed users, while storage access is handled via an object store secret."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Explain how object store secrets and resource groups complement each other in controlling dataset access."
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "When registering a training dataset, you first ensure a resource group exists and is accessible to your team, then configure an object store secret to read the data from a hyperscaler bucket."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u1_t5_mcq_001",
      "type": "mcq",
      "unit_id": "u1",
      "topic_id": "u1_t5-configurations-training",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "In SAP AI Core, what is a primary purpose of creating a training configuration for a pipeline?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text describes injecting different datasets into the same training pipeline across runs, using resource plans that vary by CPUs/GPUs, and having produced models automatically registered for deployment when stored in the connected object store."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To define inputs/outputs, select pipeline containers, and choose infrastructure resources for training runs."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context states configurations include training I/O, pipeline containers, and required infrastructure resources."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To permanently fix a single dataset so the pipeline cannot be reused with other data."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context emphasizes running the same pipeline on different datasets."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To disable automatic model registration after training completes."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text notes models are automatically registered when stored in the connected object store; disabling this is not mentioned."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To merge multiple resource plans into a single custom hardware profile."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Resource plans are provided bundles; merging them is not described."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To deploy models directly to production without any training step."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Configurations relate to training; deployment occurs after the model is produced and registered."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["ai-core", "training-configuration", "pipelines"],
      "concept_tags": ["training-io", "pipeline-containers", "resource-plans"],
      "context_tags": ["dataset-variation", "automatic-registration"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on what a configuration contains for a training run."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Eliminate options that limit dataset reuse or contradict automatic registration."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think I/O, Images, Infra: inputs/outputs, containers, resources."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A configuration in SAP AI Core specifies training inputs/outputs, the pipeline containers, and the required infrastructure resources; it does not lock datasets, merge resource plans, disable registration, or replace training with deployment."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which part of the context mentions infrastructure bundles and how does that relate to configurations?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Example: A configuration sets dataset location (input), model artifact path (output), the container image for training, and a GPU-enabled resource plan."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u1_t6_mcq_001",
      "type": "mcq",
      "unit_id": "u1",
      "topic_id": "u1_t6-deployment-serving",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "In SAP AI Core, which step indicates the deployment is ready for consumption by client applications?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "After training, a model is deployed so new data can be sent for predictions. An inference request is sent to an endpoint; the serving app interprets the request body and retrieves the model from the object store. Once the model server is running, the deployment can be consumed via an exposed URL using standard HTTP tools."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "When the model server is running and the deployment URL is available."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states the final step is consuming the model once the model server is running and the deployment URL is ready."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "When the training job completes and produces a metrics report."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Training completion alone does not indicate a ready deployment; serving must be started."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "When the Kubernetes cluster is configured to provide both CPU and GPU nodes."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Cluster configuration is preparatory; readiness is tied to the running server and URL availability."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "When the serving application finishes interpreting the request body."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Interpreting a request happens during inference, not as a signal that deployment is ready."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "When the model is uploaded to the hyperscaler object store."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Storing the model is a prerequisite; it does not by itself make the deployment consumable."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["deployment", "serving", "inference"],
      "concept_tags": ["deployment_readiness", "endpoint_consumption"],
      "context_tags": ["SAP_AI_Core", "model_serving"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for the condition directly tied to consumption via HTTP tools."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Distinguish between preparation steps and the moment the service is live."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Ready to serve = running server + reachable URL."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Per the text, deployment is consumable once the model server is running and the deployment URL is exposed for HTTP requests."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Explain why training completion is insufficient for immediate consumption."
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A Jupyter notebook sends an HTTP POST to the exposed deployment URL after the server is running."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u1_t7_mcq_001",
      "type": "mcq",
      "unit_id": "u1",
      "topic_id": "u1_t7-tutorial-pointer",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best reflects the transition described in the tutorial pointer?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The material references a practical SAP AI Core tutorial for building a house price predictor and then moves to foundational concepts about Large Language Models, including their benefits and risks."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It moves from a hands-on SAP AI Core house price predictor tutorial to fundamentals of Large Language Models, including benefits and risks."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context explicitly mentions a house price predictor tutorial followed by LLM fundamentals and a benefits/risks discussion."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It begins with LLM fundamentals and then concludes with deploying the house price predictor to production."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Order is reversed and deployment details are not stated in the context."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It focuses solely on defining LLMs without any reference to practical tutorials."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context clearly references a practical house price predictor tutorial."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It compares multiple SAP products for pricing analytics without mentioning LLMs."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "No comparison of SAP products is described; LLMs are explicitly mentioned."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It provides a deep dive into dataset labeling techniques used by LLMs for supervised fine-tuning."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Dataset labeling or fine-tuning specifics are not provided in the context."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["tutorial-pointer", "sap-ai-core", "llm-overview"],
      "concept_tags": [
        "tutorial-sequencing",
        "benefits-and-risks",
        "foundations"
      ],
      "context_tags": ["SAP AI Core", "LLM fundamentals"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Identify the initial practical activity mentioned before theoretical content."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for the option that preserves the stated order and scope."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "First build, then learn: practice precedes principles."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The context frames a sequence: a hands-on SAP AI Core house price predictor tutorial, followed by LLM fundamentals covering benefits and risks."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How does starting with a practical build help when learning LLM fundamentals afterward?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Example: A course may start with implementing a small model, then transition to theory describing model capabilities and limitations."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u2_t1_mcq_001",
      "type": "mcq",
      "unit_id": "u2",
      "topic_id": "u2_t1-llm-pros-cons-ethics",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best captures a risk highlighted when businesses adopt LLMs?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context outlines benefits like scalability and continuous learning, typical SaaS deployment, and challenges including technical complexity and organizational risks. It also references SAP’s focus on AI ethics and addressing GenAI security challenges."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Overdependence on LLM outputs can expose a business if the system fails or returns inaccuracies."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Directly reflects the stated dependency risk: vulnerability from system outages or inaccurate results."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "LLMs eliminate the need for any technical expertise once deployed."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Contradicted by the text, which notes implementation and maintenance require technical expertise."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "LLMs inherently reduce all security challenges in cloud-based setups."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text mentions GenAI introduces complex security challenges; it does not remove them."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "SaaS hosting prevents any operational issues from affecting customers."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "SaaS is noted as common deployment, not as a guarantee against operational issues."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Training LLMs guarantees perfect accuracy across evolving business needs."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "While models can learn and improve, the text does not claim guaranteed perfection."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["risk", "llm-adoption", "sap-ai-ethics"],
      "concept_tags": [
        "dependency",
        "technical-complexity",
        "security-challenges"
      ],
      "context_tags": ["saas", "generative-ai", "enterprise"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for language about business vulnerability tied to system behavior."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Eliminate options that claim guarantees or absolutes not supported by the text."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think DCS: Dependency, Complexity, Security—risks often ride with these."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The text explicitly warns that excessive reliance on LLMs can make businesses vulnerable if systems fail or produce inaccuracies; other options overpromise or contradict noted challenges."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How might an organization mitigate dependency risk while still leveraging LLM scalability?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A support team automates replies with an LLM; an outage or hallucination could disrupt service quality—illustrating dependency risk."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u2_t2_gaihub_mcq_01",
      "type": "mcq",
      "unit_id": "u2",
      "topic_id": "u2_t2-genai-hub-overview",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best describes how the generative AI hub and SAP’s approach support early-stage ideation for business applications?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context highlights that businesses can integrate AI directly into applications and input their own data to obtain tailored outputs. It also notes an ideation phase emphasizing familiarization and iterative experimentation by relevant roles."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They enable teams to start with simple experiments using their own data, while technical and product roles familiarize themselves with generative AI."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text specifies direct data input for tailored results and recommends an iterative, familiarity-building approach during ideation involving technical and product personas."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They require full model training from scratch before any prototyping can begin."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text says businesses can use models without learning to design and train them."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They restrict involvement to data engineers only during ideation to avoid cross‑functional complexity."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text lists multiple personas (including product roles), not only data engineers."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They focus ideation on advanced fine‑tuning first, then consider simple tasks later."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text recommends starting with simple ideas and iterating, not beginning with advanced steps."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They emphasize manual data labeling as the primary activity before any familiarization."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text emphasizes familiarization and iterative experimentation, not manual labeling as primary."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["generative_ai_hub", "business_ai", "ideation"],
      "concept_tags": [
        "iterative_experimentation",
        "role_involvement",
        "data_input_for_tailoring"
      ],
      "context_tags": [
        "sap_business_ai",
        "early_ideation",
        "application_integration"
      ],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for mentions of starting simple and learning about the technology during ideation."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Consider whether training models from scratch is required per the text."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "IDEA: Initialize simple, Data in, Engage roles, Adapt iteratively."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The text positions ideation as a familiarization and iterative experimentation phase where teams use existing models, integrate directly, and input their own data to get tailored outputs."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which personas are mentioned for ideation, and how does their involvement support simple, iterative experiments?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A team prototypes a text classification scenario using the hub, feeding company data and iterating on prompts before considering advanced tuning."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u2_t3_ideation_validation_mcq_01",
      "type": "mcq",
      "unit_id": "u2",
      "topic_id": "u2_t3-productization-phases",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "During the Ideation and Validation phases, which action best aligns with the roles and safeguards described?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The material highlights exploring SAP’s AI strategy and learning resources, collaborating with customers to shape use cases, and conducting validation with attention to ethics and data protection, especially where personal or PII data is involved. Technical roles assess data access and test approaches."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Engage customers to explore use cases, then validate with ethical and data protection safeguards, especially for PII."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Customer collaboration drives ideation, and validation requires adherence to ethical and data protection principles for use cases involving personal/PII data."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Skip customer engagement during ideation and rely solely on internal brainstorming to accelerate validation."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text emphasizes engaging with customers to explore potential use cases as key for ideation."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Perform technical validation without confirming access to data, focusing only on model selection."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Technical evaluation includes ensuring access to data for evaluation, not just choosing models."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Prioritize commercialization modeling before any ethical or data protection checks."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Ethical and data protection principles are mandatory in validation, particularly for PII, before commercialization steps."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Rely on SAP’s AI strategy page alone to replace customer collaboration during ideation."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Viewing strategy and resources is encouraged, but the text specifically calls out customer collaboration as essential for ideation."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": [
        "ideation",
        "validation",
        "ethics",
        "PII",
        "customer-collaboration"
      ],
      "concept_tags": [
        "customer-collaboration",
        "ethical-validation",
        "technical-evaluation"
      ],
      "context_tags": [
        "sap-ai-strategy",
        "design-led-development",
        "data-protection"
      ],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Identify which option integrates both customer engagement and ethical safeguards."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for mention of PII considerations during validation."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think ICE: Involve customers (Ideation), Check ethics (Validation), Ensure data access (Technical)."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The text stresses customer engagement for ideation and ethical/data protection adherence during validation, particularly for PII, with technical roles ensuring data access for evaluation."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would the approach change if no PII is involved in the use case?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A product owner runs workshops with a customer to shape an AI use case, then the team validates using test data with privacy checks in place."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u2_t4_001",
      "type": "mcq",
      "unit_id": "u2",
      "topic_id": "u2_t4-integration-steps",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which option best aligns with the lesson’s framing of integrating LLMs into business applications on SAP BTP?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The lesson contrasts two frameworks used together on SAP BTP and emphasizes that integration combines data, intelligence, and user experience within a structured, standards-aligned lifecycle."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Use LangChain for tool/agent orchestration with Python or JavaScript, pair it with LlamaIndex for data ingestion/structuring/access, and integrate on SAP BTP as a strategic blend of data, intelligence, and UX."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Matches the text: LangChain for tools/agents in Python/JavaScript, LlamaIndex for data handling, combined on SAP BTP with a strategic focus on data, intelligence, and user experience."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Rely solely on LlamaIndex for both agent orchestration and data tasks to simplify deployment on SAP BTP."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text separates roles: LangChain excels at tools/agents; LlamaIndex focuses on data ingestion/structuring/access."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Prefer only Java for LangChain-based integration to ensure compatibility with SAP services."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text mentions Python and JavaScript with LangChain, not Java."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Treat LLM integration as a purely technical pipeline without considering user experience."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states integration is a strategic orchestration of data, intelligence, and user experience."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Deploy quickly without lifecycle alignment, then replace frameworks after launch based on ad-hoc feedback."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text stresses a structured, standards-aligned lifecycle and continuous refinement, not ad-hoc replacement."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["integration", "LLM", "SAP BTP", "LangChain", "LlamaIndex"],
      "concept_tags": ["tool_orchestration", "data_ingestion", "UX_strategy"],
      "context_tags": ["SAP_standards", "framework_combination"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Identify which framework is tied to tools/agents versus data ingestion/structuring/access."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for the option that treats integration as both technical and experiential on SAP BTP."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Pair the T with D: Tools→LangChain; Data→LlamaIndex; both on BTP with UX in mind."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The lesson highlights complementary roles: LangChain for orchestration with Python/JavaScript, LlamaIndex for data workflows, combined strategically on SAP BTP within a structured lifecycle."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How does emphasizing user experience change your framework choices or integration order?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "An app on SAP BTP uses LangChain to call tools and LlamaIndex to retrieve structured enterprise data for the LLM, designed with UX considerations."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u2_t5_mcq_001",
      "type": "mcq",
      "unit_id": "u2",
      "topic_id": "u2_t5-llm-use-cases",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "According to the lesson, what is a practical reason to apply prompt engineering when using LLMs for a specific use case?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The unit highlights that LLMs have limitations, performance varies by use case, and optimization is an ongoing process. Prompt engineering is presented as a process for crafting prompts, including chaining related prompts with conversation history to maintain context and continuity."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To maintain context and continuity by chaining related prompts with conversation history."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states that multiple related prompts can be concatenated so the model maintains context and continuity across the conversation."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To permanently remove all limitations of the LLM for any use case."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text acknowledges limitations and suggests optimization, not permanent removal of all limitations."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To update the model’s internal parameters without retraining."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Prompt engineering shapes inputs; the text does not mention changing internal parameters."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To guarantee identical outputs for every run of the same prompt."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text does not claim determinism; it focuses on improving consistency via context, not guaranteeing identical outputs."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To eliminate the need for any ongoing optimization process."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The unit describes optimization as ongoing; prompt engineering does not end that need."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["llm", "prompt_engineering", "use_cases"],
      "concept_tags": ["context_chaining", "optimization_strategies"],
      "context_tags": ["lesson_overview", "limitations"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for what prompt chaining and conversation history are intended to achieve."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Eliminate options that promise absolute guarantees or permanent fixes."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Chain to sustain: chaining prompts sustains context."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The lesson explains that concatenating related prompts with conversation history helps the model maintain context and continuity, improving consistency for a given use case; it does not claim to remove all limitations, change model parameters, or guarantee identical outputs."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Describe a scenario where adding prior turns to a prompt could improve the model’s consistency."
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "When explaining a multi-stage process, include earlier steps in the next prompt so the model continues the explanation coherently."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u2_t6_cot_mcq_001",
      "type": "mcq",
      "unit_id": "u2",
      "topic_id": "u2_t6-cot-example",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which option best describes how the Chain-of-Thought (CoT) approach is illustrated in the context?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context presents a sequence of prompts about plant growth (seedling stage, leaf development, sunlight’s role) to show stepwise prompting, and contrasts this with a Tree-of-Thought structure that branches into sub-questions (e.g., roots, shoot, cotyledons, true leaves). It also mentions RAG, fine-tuning, and tools to improve LLM outputs."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "By breaking a complex process into sequential prompts that guide step-by-step reasoning."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text shows CoT as a sequence of prompts (e.g., seedling stage, leaves, sunlight) to simplify understanding via stepwise prompting."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "By evaluating multiple branches in parallel to compare alternative reasoning paths."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Parallel branching is described as Tree-of-Thought, not the CoT illustration."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "By retrieving external documents using a vector engine to ground responses."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Retrieval with a vector engine is associated with RAG, which is mentioned separately from the CoT example."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "By fine-tuning a model on domain data to improve factual accuracy."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Fine-tuning is discussed as a technique, but not as the method illustrating CoT in the example."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "By delegating tasks to agents that use tools and functions autonomously."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Agents and tools are mentioned generally; they do not describe the CoT illustration given."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["reasoning", "prompting", "cot"],
      "concept_tags": ["Chain-of-Thought", "Tree-of-Thought", "RAG"],
      "context_tags": ["plant-growth-example", "LLM-techniques"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on the sequential nature of the prompts in the example."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Differentiate between stepwise sequencing and branching structures."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "CoT = Chain = one link after another; ToT = Tree = branches."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The CoT illustration uses a linear sequence of prompts about plant growth stages to scaffold reasoning. Branching comparisons, retrieval, fine-tuning, and agent tooling are discussed but characterize other techniques."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would you convert the CoT sequence into a Tree-of-Thought set of branches for the same topic?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Example CoT: Ask about seedling stage, then leaves, then sunlight—each step builds on the previous."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u2_t7_001",
      "type": "mcq",
      "unit_id": "u2",
      "topic_id": "u2_t7-rag-hana-vector",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best reflects the role of the SAP HANA Vector Engine in a RAG setup?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text describes RAG as improving response precision and reliability and introduces SAP HANA Vector Engine as part of SAP HANA for handling vector data, enabling AI integration and scalability in enterprise environments."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It enables enterprise databases to efficiently store and query embeddings, supporting AI integration for enhanced query responses."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states the Vector Engine handles embeddings and facilitates integration of AI models, like those used in RAG, improving query responses."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It replaces the need for retrieval in RAG by generating answers without accessing stored vectors."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text links the engine to handling vectors and AI integration, not eliminating retrieval."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It is a standalone AI model that composes responses instead of the database."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The engine is a database component, not a generative model."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It only supports structured tabular data, not unstructured vector data."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text explicitly says it handles complex and unstructured vector data."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It is limited to small, non-enterprise workloads and does not scale with application needs."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text highlights scalability for enterprise AI applications."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["RAG", "SAP HANA", "vector-embeddings", "enterprise-AI"],
      "concept_tags": ["retrieval-augmented-generation", "vector-engine"],
      "context_tags": ["database-integration", "scalability"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on how embeddings and AI models interact with the database component."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for mentions of integration and scalability rather than generation."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think: HANA Vector = Handles Vectors for enterprise AI, not the model itself."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The Vector Engine is a SAP HANA component for embeddings and unstructured vector data, facilitating AI model integration (e.g., in RAG) and enabling scalable, enhanced query responses."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How does handling embeddings within the database benefit RAG compared to external vector stores?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "In a RAG system, queries are converted to embeddings and matched in HANA’s Vector Engine before the model generates the final answer."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u2_t8_mcq_001",
      "type": "mcq",
      "unit_id": "u2",
      "topic_id": "u2_t8-fine-tuning-intro",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best captures the lesson’s goal regarding fine-tuning LLMs?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The lesson introduces fine-tuning as part of optimizing Large Language Models for a use case and mentions that agents, functions, and tools can enhance LLM capabilities."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It aims to help you identify when fine-tuning is needed to improve performance for a specific use case."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The objective states learners will be able to identify the need for fine-tuning to improve performance for their use case."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It focuses on replacing agents and tools with fine-tuning to simplify LLM applications."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text says agents, functions, and tools can enhance LLMs; it does not propose replacing them."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It primarily teaches how to build a code repository retrieval function from scratch."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "A retrieval function is given only as an example of augmentation, not the lesson’s primary goal."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It concentrates on SAP HANA Cloud vector engine configuration for fine-tuning."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "SAP HANA Cloud is mentioned, but the lesson focus is identifying the need for fine-tuning, not specific configuration."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It defines fine-tuning as replacing an LLM with a new model trained from scratch."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text describes fine-tuning as iterative minor adjustments, not training from scratch."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["fine-tuning", "llm-optimization", "learning-objectives"],
      "concept_tags": ["fine-tuning-objective", "use-case-performance"],
      "context_tags": ["agents-functions-tools", "lesson-intro"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for the explicit learning objective stated in the lesson."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Distinguish between supporting examples and the primary goal."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Objective first: identify the need before applying techniques."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The lesson’s objective is to identify when fine-tuning is needed to improve use-case performance; other options overemphasize tools, infrastructure, or misconstrue fine-tuning."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Give a scenario where recognizing the need for fine-tuning precedes adding agents or functions."
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Example: Deciding to fine-tune an LLM for domain-specific code generation before integrating a repository retrieval function."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u3_t1_001",
      "type": "mcq",
      "unit_id": "u3",
      "topic_id": "u3_t1-agents-tools",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "In the marketing report scenario, which pairing best reflects how a developer might combine an agent’s goal with appropriate tools when using an LLM?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "LLMs can be supported by various tools based on user needs. A developer generating code may use a text editor to create prompts and a debugging tool to inspect LLM output. The lesson also discusses evaluating LLM-generated text using methods like n-grams and BLEU, but tool selection depends on the immediate task."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Use a text editor for crafting prompts and a debugging tool to inspect outputs while the agent pursues the marketing report goal."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context states developers may use a text editor to create prompts and a debugging tool to inspect LLM output; this aligns with an agent working toward a report."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Rely solely on BLEU to generate the report content without any prompt creation or inspection."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "BLEU is an evaluation metric for similarity, not a tool to generate content or replace prompting/inspection."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Skip tools entirely because agents inherently guarantee correct outputs."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text emphasizes using tools to manage and inspect outputs; there is no claim of inherent guarantees."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Use n-gram counts to automatically draft the report without involving the LLM."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "N-grams are described as analysis constructs, not a standalone drafting tool replacing the LLM."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Employ a debugging tool to write prompts and a text editor solely to score the report with BLEU."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "This reverses roles; the context links text editors to prompt creation and debugging tools to inspecting outputs; BLEU is an evaluation metric, not performed by a text editor per se."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["agents", "tools", "marketing-report", "llm-practice"],
      "concept_tags": ["agent-tool-interaction", "prompting", "inspection"],
      "context_tags": ["developer-setup", "evaluation-metrics"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Identify which items are for creating prompts versus inspecting outputs."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Distinguish generation tools from evaluation metrics like BLEU and n-grams."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Edit to ask; debug to check."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The passage ties text editors to prompt creation and debugging tools to inspecting LLM output; evaluation metrics like BLEU/n-grams assess similarity, not generate content."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would you incorporate BLEU after the agent generates a first draft of the report?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A developer drafts prompts in a text editor, runs the LLM, then checks unexpected outputs using a debugger before evaluating drafts with BLEU."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u3_t2_001",
      "type": "mcq",
      "unit_id": "u3",
      "topic_id": "u3_t2-eval-metrics",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which metric is specifically described as evaluating overlap between system-generated and reference summaries?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Different metrics capture different aspects of LLM output quality: some focus on summary overlap, others on how often predictions are correct, and others separate correctness on positives vs. coverage of positives."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "ROUGE"
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context states ROUGE measures overlap between system-generated and reference summaries."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Accuracy"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Accuracy measures the proportion of correctly predicted instances, not summary overlap."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Precision"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Precision relates to correctness on predicted positives, not overlap of summaries."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Recall"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Recall relates to coverage of actual positives, not summary overlap."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "F1 score"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "F1 combines precision and recall; it is not defined as measuring summary overlap here."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["evaluation", "metrics", "LLM"],
      "concept_tags": ["ROUGE", "accuracy", "precision", "recall", "F1"],
      "context_tags": ["LLM_inference", "assessment"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Identify which metric is tied to summarization quality."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Contrast overlap-based evaluation with correctness over all instances."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "R in ROUGE: Recall-style Overlap for sUmmary Gist Evaluation."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "ROUGE is explicitly defined as measuring overlap between generated and reference summaries, distinguishing it from accuracy, precision/recall, and F1 used for classification performance."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "When would accuracy be preferable to ROUGE in evaluating an LLM?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Evaluating a news summarizer by how many reference summary n-grams appear in the model’s summary uses ROUGE."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u3_t3_mcq_001",
      "type": "mcq",
      "unit_id": "u3",
      "topic_id": "u3_t3-prod-readiness",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which action best supports safe, real-world validation of an updated LLM before full-scale deployment?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context discusses using domain-specific and incrementally updated data, evaluating models with real workloads, and leveraging MLOps practices including staged rollouts and automated alerting with common monitoring stacks."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Serve the model to a small percentage of production traffic to test stability before broader rollout."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states that models are first served to a small percentage of traffic to test stability before higher-volume rollout."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Rely exclusively on synthetic benchmarks until all users are migrated."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text favors testing with real customer workloads over solely synthetic data."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Deploy to 100% of traffic immediately and monitor for regressions."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "This contradicts the staged, small-percentage rollout described for safety."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Disable alerts during the trial to avoid noisy notifications."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text emphasizes automated alerting via monitoring tools, not disabling alerts."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Wait to integrate monitoring until the model has stabilized post-rollout."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Monitoring and alerts are to be integrated for early detection during evaluation, not postponed."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["prod-readiness", "monitoring", "rollout"],
      "concept_tags": [
        "staged_rollout",
        "real_workloads",
        "automated_alerting"
      ],
      "context_tags": ["LLMops", "production_validation"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for an option that limits blast radius while gathering real-world signals."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Recall the role of canary or percentage-based deployments mentioned."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Start small, watch closely: canary then scale."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "MLOps guidance in the text recommends first routing a small percentage of production traffic to the new model and using automated monitoring to validate stability before scaling."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would you combine percentage rollout with alerts in Prometheus/Grafana to define go/no-go criteria?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Route 5% of live customer queries to the new LLM version, track error rates and latency via Grafana dashboards, and scale up only if metrics stay within thresholds."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u3_t4_mcq_001",
      "type": "mcq",
      "unit_id": "u3",
      "topic_id": "u3_t4-security",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which action best aligns with securing LLM applications as described?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text emphasizes evaluating safety and security of LLM applications, monitoring and enhancing protections over time, and detecting/preventing threats such as hallucinations, jailbreaks, and data leakage within business-critical AI contexts."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Continuously monitor and improve safeguards to detect and prevent hallucinations, jailbreaks, and data leakage."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The passage explicitly calls for monitoring over time and preventing these specific threats."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Rely on a one-time security check before deployment and avoid further changes to maintain stability."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Contradicts the call to monitor and enhance security measures over time."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus exclusively on performance metrics and defer security until after production incidents occur."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text prioritizes proactive safety evaluation and protection, not deferring to incidents."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Address only data leakage since other risks are rare in business-critical AI."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The passage highlights multiple threats: hallucinations, jailbreaks, and data leakage."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Depend solely on embedded AI capabilities to inherit all required security without extra monitoring."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Even with embedded capabilities, the text stresses ongoing monitoring and enhancement."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["security", "llm", "monitoring"],
      "concept_tags": ["risk_mitigation", "threat_detection"],
      "context_tags": ["business_critical_ai", "safety_evaluation"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for proactive, ongoing actions rather than one-time steps."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Consider all listed threats, not just one."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think MEP: Monitor, Evaluate, Prevent."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The text instructs teams to evaluate safety, monitor and enhance protections over time, and prevent key threats (hallucinations, jailbreaks, data leakage). Option A matches all elements."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would you implement ongoing monitoring for these threats in a production environment?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A team adds runtime detectors for jailbreak attempts and periodically updates guardrails based on monitoring alerts."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u4_t1_mcq_001",
      "type": "mcq",
      "unit_id": "u4",
      "topic_id": "u4_t1-foundation-overview",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best captures the primary rationale for SAP’s Generative AI hub on BTP as described?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "SAP embeds AI Foundation across its portfolio. The Generative AI hub, part of SAP AI Core and SAP AI Launchpad on SAP BTP, consolidates access to trusted LLMs and foundation models and supports end-to-end AI lifecycle activities such as development, deployment, management, BYOM, compute allocation, (re)training, and serving workflows."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To systematically support model selection and centralize trusted LLM and foundation model access for diverse business use cases."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states the hub facilitates systematic, tool-supported model selection and consolidates trusted model access tailored to diverse use cases."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To replace SAP AI Core and SAP AI Launchpad with a single standalone product."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The hub is described as part of SAP AI Core and SAP AI Launchpad, not a replacement."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To eliminate the need for compute resource allocation and training workflows."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text indicates support for compute allocation and (re)training, not elimination."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To limit customers to a single, preselected LLM for governance simplicity."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The rationale emphasizes diverse use cases and model selection, not limiting to one model."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To focus solely on deployment while leaving development and management to external tools."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The hub covers end-to-end lifecycle: development, deployment, and management."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["AI Foundation", "Generative AI Hub", "BTP"],
      "concept_tags": ["model selection", "AI lifecycle", "LLM access"],
      "context_tags": ["SAP BTP", "AI Core", "AI Launchpad"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for language about diversity of use cases and consolidated access."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The correct option should align with end-to-end lifecycle support and centralization, not replacement."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think HUB: Handle model selection, Unite access, Back the lifecycle."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The hub exists to navigate a growing LLM landscape by centralizing trusted access and supporting systematic, tool-assisted model selection across the AI lifecycle."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How does consolidating model access help with tailoring solutions to varied business scenarios?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A team compares multiple trusted LLMs via the hub’s workflows to select one for a procurement chatbot and then deploys it through the same platform."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u4_t2_mcq_001",
      "type": "mcq",
      "unit_id": "u4",
      "topic_id": "u4_t2-orchestration-governance",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best captures the primary goal of AI orchestration as described?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context discusses coordinating AI components, handling model execution and data flow, optimizing resources, and enabling adaptable integration (e.g., switching models or changing configurations) within platforms that facilitate safe access to generative capabilities."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Streamline and automate end-to-end AI application lifecycles by coordinating models, data flows, and computational resources."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Directly reflects coordinating multiple models, managing data flow, optimizing resources, and lifecycle automation."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Primarily replace human governance processes with autonomous agents to ensure compliance."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Governance is mentioned in framing, but replacing human processes is not stated."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus solely on fine-tuning a single LLM for domain-specific tasks."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text emphasizes coordinating multiple components and models, not a single-model focus."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Ensure data residency by preventing any cross-service integration."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Integration across services is implied; preventing integration is not supported."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Guarantee zero adaptation needs by fixing the orchestration configuration upfront."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text highlights adaptability, including switching models and changing configurations."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": [
        "ai-orchestration",
        "governance",
        "adaptability",
        "generative-ai"
      ],
      "concept_tags": [
        "coordination",
        "data-flow",
        "resource-optimization",
        "lifecycle-automation",
        "model-switching"
      ],
      "context_tags": ["sap-ai-core", "ai-launchpad", "generative-ai-hub"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for coordination across models, data flow, and resources—not just one of these."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Adaptability (e.g., switching models) supports but does not replace the main orchestration goal."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Three Cs of orchestration: Coordinate components, Control data flow, Conserve resources."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "AI orchestration is defined as coordinating and managing multiple AI components, data flows, and resource use to streamline and automate the end-to-end lifecycle; adaptability features augment this objective."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Describe how switching models fits within orchestration without changing its primary goal."
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A workflow routes requests to different models, manages input/output data, and scales compute automatically across steps."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u4_t3_btp_setup_001",
      "type": "mcq",
      "unit_id": "u4",
      "topic_id": "u4_t3-btp-setup",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "When provisioning SAP AI Core in SAP BTP, what is the primary purpose of the generated service key?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "You first need access to a global SAP BTP account. From the BTP cockpit, you can provision SAP AI Core. During provisioning, a service key is generated. Deployments of model versions are created afterward, and a model version may stop working after its deprecation date."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It provides the URLs and credentials required to access the SAP AI Core instance."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states the service key includes necessary URLs and credentials to access the instance."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It automatically creates deployments for all available model versions."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Deployments are created separately; the service key does not auto-deploy models."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It prevents model versions from reaching their deprecation date."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Deprecation dates still apply; the service key does not affect deprecation."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It grants access to the SAP BTP global account setup tutorial."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Tutorial access is unrelated to the service key’s function."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It licenses specific models like meta--llama3-70b-instruct or gemini-1.5-pro."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text mentions deploying models, not licensing them via the service key."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["btp", "ai-core", "provisioning", "service-key"],
      "concept_tags": ["service key purpose", "provisioning workflow"],
      "context_tags": ["sap btp cockpit", "ai core access"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on what information the service key contains."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Separate provisioning credentials from deployment actions."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Key = credentials + endpoints; deploy ≠ key."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Provisioning SAP AI Core generates a service key that includes URLs and credentials to access the instance; deployments and model lifecycles are managed separately."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Explain how you would use the service key information during a deployment setup."
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "After provisioning, a developer uses the service key’s endpoint and credentials to configure a client to create a deployment."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u4_t4_mcq_001",
      "type": "mcq",
      "unit_id": "u4",
      "topic_id": "u4_t4-beyond-chatbots",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "According to the context, which scenario best illustrates a software-to-software (non-human-in-the-loop) use of LLMs beyond chatbots?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The lesson emphasizes that generative AI (particularly LLMs) can operate in workflows where both input and output are handled by software, enabling automation of processes and system optimization beyond human-facing chat interfaces. An example business use involves standardizing product descriptions across platforms using a generative AI hub."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "An LLM integrated into a pipeline that ingests product data and outputs standardized descriptions directly to multiple platforms without manual steps."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Matches the described non-human-in-the-loop automation and the product description standardization use case."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "A customer support chatbot that answers user queries on a website through live conversation."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "This is a human-facing chatbot, not software-to-software processing emphasized as beyond chatbots."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "A human editor drafts product copy and asks the LLM for stylistic suggestions before publishing."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Human-in-the-loop editing, not the fully automated software-handled flow highlighted in the text."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "An LLM that schedules meetings after chatting with users to collect their preferences."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Still primarily a user-chat interaction; not the software-to-software automation focus."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "A voice assistant that reads product descriptions aloud to customers in a store."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Human-facing delivery via voice; the context stresses automation where software handles both input and output."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["beyond_chatbots", "software_to_software", "automation"],
      "concept_tags": ["LLM_non_human_loop", "process_automation"],
      "context_tags": [
        "generative_ai_hub",
        "product_description_standardization"
      ],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for a flow where software provides inputs to the LLM and receives outputs without a human step."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Recall the business problem about inconsistent product descriptions and how the hub addressed it."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think S2S: Software feeds, Software receives—no Stop for humans."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The context highlights LLM applications that automate processes end-to-end without direct human interaction. Option A reflects this by standardizing product descriptions across platforms via an automated pipeline, aligning with the described business scenario."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How could monitoring or guardrails be added to the automated pipeline without introducing a human bottleneck?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A backend service sends product attributes to an LLM and publishes the returned standardized text to e-commerce listings automatically."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u4_t5_001",
      "type": "mcq",
      "unit_id": "u4",
      "topic_id": "u4_t5-business-case-setup",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Given the business problem described, what is the immediate goal of the prompting task in SAP AI Launchpad?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "A facility solutions company aims to use a generative AI hub to produce consistent product content and to process incoming emails. The process includes developing a prompt as part of a stepwise ideation approach inside SAP AI Launchpad."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Identify urgency and sentiment within an incoming email."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text explicitly states the next step is to find the urgency and sentiment in an incoming mail."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Automatically generate pricing for facility services."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Pricing generation is not mentioned as a goal in the provided context."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Deploy a production chatbot for customer support."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context focuses on prompt development and email analysis, not full chatbot deployment."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Translate all product descriptions into multiple languages."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "While content generation is noted, translation is not specified as the immediate task."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Predict maintenance schedules for commercial properties."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "No prediction of maintenance schedules is described in the context."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["prompting", "email-analysis", "sap-ai-launchpad"],
      "concept_tags": [
        "prompt-design",
        "sentiment-analysis",
        "priority-detection"
      ],
      "context_tags": ["facility-solutions", "generative-ai-hub"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on what the prompt aims to extract from the email rather than long-term outcomes."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for the explicitly stated next step in the process description."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think: Mail → Measure Mood and Momentum (sentiment and urgency)."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The text states that after setting up the prompt in SAP AI Launchpad, the task is to find the urgency and sentiment in an incoming mail."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would identifying urgency and sentiment influence downstream message categorization?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Example: A prompt that asks the model to label an email as High/Medium/Low urgency and Positive/Neutral/Negative sentiment."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u5_t1_mcq_001",
      "type": "mcq",
      "unit_id": "u5",
      "topic_id": "u5_t1-basic-email-prompt",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Given the email prompt and extraction instructions, which JSON output best matches the required labels for urgency and sentiment?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "An email requests immediate HVAC repair due to malfunction causing significant disruption and discomfort, while remaining polite and appreciative. The task demands a JSON with keys \"urgency\" ∈ {low, medium, high} and \"sentiment\" ∈ {positive, neutral, negative}."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "{\"urgency\":\"high\",\"sentiment\":\"positive\"}"
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The message stresses immediacy and severe impact (high urgency) while maintaining courteous, appreciative tone (positive sentiment)."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "{\"urgency\":\"medium\",\"sentiment\":\"neutral\"}"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Downplays both the explicit urgency and the clearly polite tone."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "{\"urgency\":\"low\",\"sentiment\":\"positive\"}"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Tone fits, but urgency is inconsistent with repeated immediate repair requests."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "{\"urgency\":\"high\",\"sentiment\":\"negative\"}"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Urgency fits, but the email is courteous, not hostile or negative."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "{\"urgency\":\"medium\",\"sentiment\":\"negative\"}"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Both labels mischaracterize the email’s strong urgency and appreciative tone."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["nlp", "classification", "prompt-engineering"],
      "concept_tags": [
        "urgency-detection",
        "sentiment-analysis",
        "structured-output"
      ],
      "context_tags": ["email", "HVAC-support", "json-output"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on phrases indicating immediacy and impact on daily activities to gauge urgency."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Assess politeness and appreciation versus hostility to determine sentiment."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "UP: Urgency from Pressure; Sentiment from Politeness."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The email requests immediate action and describes severe disruption (high urgency) while expressing appreciation and courtesy (positive sentiment)."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which specific phrases signal urgency versus sentiment, and why?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "E.g., a polite request citing severe disruption typically maps to high urgency and positive sentiment."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u5_t2_mcq_001",
      "type": "mcq",
      "unit_id": "u5",
      "topic_id": "u5_t2-json-cleanliness",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which instruction best reflects the strict JSON output requirements described?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context emphasizes producing a compact JSON object that can be read directly by tools, restricting output to a specified key list, avoiding formatting wrappers, and preventing extra whitespace or quotes beyond what is valid in JSON. A tool UI screenshot shows categories being assigned from a prompt-driven extraction workflow."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Return a single JSON object with only the allowed keys, no code fences, no newlines, and no unnecessary whitespace."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Directly matches the stated requirements: one JSON object, key-limited, no ```json fences, and compact formatting."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Wrap the JSON in ```json fences so readers recognize the format."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context explicitly says never enclose it in ```json```."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Add human-readable line breaks and spaces for clarity."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The instruction specifies no newlines and no unnecessary whitespace."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Include helpful extra keys if they improve downstream use."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Output must only contain the keys mentioned in the list; extra keys are disallowed."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Provide both the JSON and a prose summary of the result."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Only a directly readable JSON object should be returned; no additional prose."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["json", "formatting", "evaluation"],
      "concept_tags": ["compact-json", "key-restriction", "tool-compatibility"],
      "context_tags": [
        "prompt-editor",
        "category-assignment",
        "output-discipline"
      ],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Identify which option forbids wrappers and extra whitespace."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for the choice that limits output strictly to the allowed keys."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think CKW: Compact, Key-limited, Wrapper-free."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The prompt mandates a single compact JSON object, restricted to specified keys, with no code fences, newlines, or unnecessary whitespace."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would violating any one of CKW (compact, key-limited, wrapper-free) break tool ingestion?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Example of compliant shape: {key1:value1,key2:value2} using only allowed keys and no extraneous formatting."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u5_t3_adding_categories_mcq_001",
      "type": "mcq",
      "unit_id": "u5",
      "topic_id": "u5_t3-business-categories",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Given the customer message about an urgent HVAC malfunction in an apartment, which single support category tag best aligns with the business categorization schema described?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context outlines tagging customer messages with predefined company categories. The example message reports an HVAC system malfunction causing inconsistent temperatures and shutdowns, described as urgent. Available tags include: facility_management_issues, cleaning_services_scheduling, general_inquiries, specialized_cleaning_services, routine_maintenance_requests, this concept, sustainability_and_environmental_practices, training_and_support_requests, quality_and_safety_concerns, customer_feedback_and_complaints."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "emergency_repair_services"
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The message emphasizes an urgent HVAC malfunction affecting daily routine, aligning with emergency repair rather than planned maintenance or general inquiries."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "routine_maintenance_requests"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Routine maintenance implies scheduled, non-urgent tasks; the message explicitly notes urgency and system shutdowns."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "general_inquiries"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The message is a specific service request for a malfunction, not a general question."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "facility_management_issues"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "While HVAC pertains to facilities, the message’s urgency points to the more specific emergency repairs category."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "quality_and_safety_concerns"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Although discomfort is noted, the message’s primary intent is to request urgent repair rather than report a safety compliance issue."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["categorization", "support-tags", "hvac-example"],
      "concept_tags": [
        "business-categories",
        "urgent-vs-routine",
        "schema-alignment"
      ],
      "context_tags": ["customer-message", "facilities", "tag-selection"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on urgency and service action requested, not just the domain (facilities)."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Differentiate between scheduled maintenance and immediate fixes."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Urgent breakdowns → emergency; planned upkeep → routine."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The message reports an urgent HVAC malfunction with shutdowns, which fits the emergency_repair_services tag better than general facilities or routine categories."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would the category change if the message requested a seasonal HVAC tune-up without urgency?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "If a tenant asks to schedule a filter change next month, routine_maintenance_requests would be more appropriate than emergency_repair_services."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u6_t1_mcq_001",
      "type": "mcq",
      "unit_id": "u6",
      "topic_id": "u6_t1-sdk-install",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which command installs the SAP Generative AI Hub SDK along with its optional extras mentioned in the notes?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The notes outline installing an SDK via pip, emphasize that an extras specifier can include additional packages like langchain, and describe configuring access through a config directory and file before using OpenAI-like completion and chat interfaces."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "pip install \"generative-ai-hub-sdk[all]\""
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The notes provide this exact pip command to install the SDK with all extras, including langchain."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "pip install generative-ai-hub-sdk-all"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Uses a non-existent package name; the notes use extras syntax with brackets, not a suffixed package."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "pip install gen-ai-hub-sdk --all-extras"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Incorrect package name and flag; the notes do not mention a --all-extras option."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "pip install \"gen_ai_hub[langchain]\""
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Wrong distribution name and extras specifier; the notes specify generative-ai-hub-sdk with [all]."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "pip3 install openai[all]"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Installs a different library; the notes focus on generative-ai-hub-sdk with extras."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["sdk", "installation", "pip"],
      "concept_tags": ["extras-requirements", "package-installation"],
      "context_tags": ["sap-btp", "generative-ai-hub"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for the extras syntax that includes optional packages in brackets."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Match the exact package name used in the notes."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think: SDK plus everything—use [all] with the correct package name."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The notes specify using pip with the package generative-ai-hub-sdk and the extras specifier [all] to include additional packages like langchain."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Why might using [all] be preferable during initial setup compared to installing extras individually?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "After installation, configure access via ~/.aicore/config.json before calling OpenAI-like completion functions."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u6_t2_mcq_001",
      "type": "mcq",
      "unit_id": "u6",
      "topic_id": "u6_t2-orchestration-need",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best captures why an orchestration service (with a harmonized API) is needed in the described scenario?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The scenario involves coordinating multiple AI models and avoiding manual, repetitive updates across different model interfaces. A harmonized API standardizes interactions and integrates with templating and configuration to streamline workflows."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It reduces redundant, error-prone code by standardizing model interactions and automating multi-model execution."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text highlights manual updates, redundant functions per model, and the need for efficient multi-model execution—goals addressed by orchestration and a harmonized API."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It eliminates the need for any model configuration by auto-inferencing all parameters."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text mentions model configuration integration, not removal of configuration or full auto-inference."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It focuses solely on content filtering and data masking, ignoring execution order."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Content filtering and data masking are mentioned, but orchestration also concerns execution coordination and efficiency."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It requires writing separate client code for each foundational model to ensure correctness."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The harmonized API aims to avoid changing client code across different models, not require separate code."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It standardizes only response formats while leaving message formats and parameters unchanged."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states standardization of message formats, model parameters, and response formats—not just responses."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["orchestration", "harmonized_api", "ai_lifecycle"],
      "concept_tags": [
        "orchestration_need",
        "api_standardization",
        "multi_model_efficiency"
      ],
      "context_tags": [
        "generative_ai_hub",
        "facility_solutions_scenario",
        "sdk_prompts"
      ],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for the option that addresses both redundancy reduction and multi-model coordination."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Recall that the harmonized API standardizes messages, parameters, and responses."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "HARMONIZE: Harmonize Across models to Reduce Manual cOde, Normalize Interfaces, and Zero redundant Effort."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The need arises from manual, error-prone updates and disparate model APIs. Orchestration with a harmonized API standardizes interactions and coordinates execution, improving efficiency and reducing redundancy."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would workflows change if client code did not need to be altered when switching foundational models?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Instead of writing distinct functions for Model A and Model B, a single client function calls the harmonized API while orchestration handles model-specific mapping and execution order."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u6_t3_mcq_001",
      "type": "mcq",
      "unit_id": "u6",
      "topic_id": "u6_t3-orchestration-steps",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which sequence correctly reflects the high-level steps to use the Orchestration service?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The process involves an initial access step, a setup step to enable usage, and then making requests to the service. The SDK example configures a template and LLM via OrchestrationConfig before running a request."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Get an auth token → Create a deployment → Consume orchestration"
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "This matches the listed steps: authenticate, set up a deployment, then use the orchestration."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Create a deployment → Consume orchestration → Get an auth token"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Authentication must precede deployment creation and consumption."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Consume orchestration → Get an auth token → Create a deployment"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "You cannot consume the service before authenticating and deploying."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Get an auth token → Consume orchestration → Create a deployment"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Consumption should follow deployment, not precede it."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Create a deployment only, since orchestration auto-authenticates"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text explicitly calls out obtaining an auth token as a required step."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["orchestration", "workflow", "authentication"],
      "concept_tags": ["authentication", "deployment", "consumption"],
      "context_tags": ["generative-ai-hub-sdk", "orchestration-steps"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Identify the prerequisite that enables access before any setup or use."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "After setup, the final step is making requests to the service."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think A-D-C: Authenticate → Deploy → Consume."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The text states the order as: Get an Auth Token, Create a Deployment, then Consume Orchestration. This ensures access is granted, the service is configured, and only then are requests made."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How does configuring OrchestrationConfig in the SDK relate to the deployment and consumption steps?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "After obtaining a token, a team creates an orchestration deployment and then sends a translation request using the configured template and LLM."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u6_t4_mcq_001",
      "type": "mcq",
      "unit_id": "u6",
      "topic_id": "u6_t4-orchestration-code",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "In the provided minimal orchestration example, which code line retrieves the generated text from the first choice of the orchestration result?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The code initializes OrchestrationService, runs it with a TemplateValue named \"text\", and then accesses fields on the returned result to obtain output. Package installation and helper functions are mentioned separately."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "print(result.orchestration_result.choices[0].message.content)"
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "This directly indexes the first choice and accesses its message content, matching the example."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "print(result.content)"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The content is nested under orchestration_result -> choices -> message, not at the top level of result."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "print(orchestration_service.message.content)"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The content is returned on result, not stored on the service object."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "print(result.orchestration_result.messages[0].content)"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The structure shown uses choices[0].message.content, not a messages list."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "print(result['choices'][0]['message']['content'])"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The example uses attribute access with orchestration_result, not direct dict-style access on result."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["orchestration", "sdk", "python"],
      "concept_tags": [
        "result_access",
        "orchestration_service",
        "template_values"
      ],
      "context_tags": ["minimal_example", "code_walkthrough"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on how the result object is structured: result -> orchestration_result -> choices -> message -> content."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Only one line in the snippet prints the output; look for attribute access that includes choices[0]."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think ROCMC: result → orchestration_result → choices → message → content."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The snippet demonstrates accessing the first choice’s message content from the orchestration_result on the returned result object."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would you modify the code to print the second choice’s content if available?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "After running with TemplateValue(\"text\", ...), the first generated completion is read via choices[0].message.content."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u6_t5_mcq_001",
      "type": "mcq",
      "unit_id": "u6",
      "topic_id": "u6_t5-advanced-calls",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "When setting up requests to the AI orchestration service, what is the primary purpose of the deployment step described?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The process either retrieves an existing deployment or creates a new one, coordinates configurations, and aims for smooth execution within a specified timeout. Troubleshooting tips are available for errors. A function prepares and sends requests to an AI orchestration service, using configuration and template values to obtain a result."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Ensure a deployment is available (retrieved or created) with coordinated configuration so requests can execute within a timeout."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states the step retrieves or creates a deployment, coordinates configurations, and ensures smooth execution within a specified timeout."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Optimize model hyperparameters for higher accuracy before every request."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "No mention of hyperparameter optimization; the focus is deployment availability and coordination."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Cache all LLM choices to disk for later offline analysis."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The excerpt mentions accessing choices from results but not caching them to disk."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Bypass configuration to speed up request submission."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It explicitly notes coordinating configurations, not bypassing them."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Replace the orchestration service with direct model calls to reduce latency."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The function is described as using an AI orchestration service; replacement is not indicated."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["deployment", "orchestration", "timeouts", "troubleshooting"],
      "concept_tags": [
        "deployment_retrieval_creation",
        "configuration_coordination",
        "timeout_execution"
      ],
      "context_tags": ["ai_orchestration_service", "request_setup"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on what happens before sending requests: availability and configuration."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for references to timeout and smooth execution rather than optimization or caching."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "RCT: Retrieve/Create, Configure, then Timeout-guard execution."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The deployment step ensures an environment exists and is properly configured so the orchestration run can proceed reliably within a timeout. Other options add unsupported activities like hyperparameter tuning, caching, bypassing config, or replacing services."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How might troubleshooting tips relate if the deployment is not retrieved or created successfully?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Before calling run(config, template_values), the code ensures the deployment exists and is configured to avoid timeouts."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u7_t1_mcq_001",
      "type": "mcq",
      "unit_id": "u7",
      "topic_id": "u7_t1-function-binding",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "In the described setup, what does creating f_1 = partial(send_request, prompt=prompt_1) most directly enable?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The flow shows a templated prompt and a partially applied function used to send requests. The model meta--llama3-70b-instruct is the default within send_request, and later f_1 is invoked with input=mail[\"message\"]. Outputs can vary due to model probabilistic behavior."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Binding a specific prompt ahead of time so later calls only need to supply the input"
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "partial fixes the prompt argument for send_request, letting f_1 be called later with just the remaining parameters such as input."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Overriding the default model so that a different model is always used"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context says the default model in send_request is meta--llama3-70b-instruct; partial is used to bind the prompt, not change the model."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Ensuring deterministic outputs despite temperature and probabilistic generation"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context explicitly notes outputs may vary; binding a prompt does not make responses deterministic."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Embedding the entire email content into the function definition to avoid passing inputs"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The call f_1(input=mail[\"message\"]) shows the input is still provided at call time; it is not embedded upfront."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Bypassing the generative-ai-hub-sdk so requests are sent directly to the model"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states the SDK is used; partial does not bypass it but configures arguments for send_request."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["function-binding", "partial-application", "prompts"],
      "concept_tags": ["partial", "templated-prompts", "default-arguments"],
      "context_tags": ["send_request", "prompt_1", "function-call"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on what argument is fixed when creating f_1 and what remains to be supplied later."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Recall that outputs can still vary; partial does not alter model stochasticity."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Partial pins one piece; pass the rest later."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "partial(send_request, prompt=prompt_1) creates f_1 with the prompt pre-specified, so subsequent calls like f_1(input=mail[\"message\"]) need only provide the remaining parameters."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "What other parameters might you pre-bind with partial to simplify repeated calls?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Similar to fixing base_url in an HTTP client and supplying only endpoint-specific data when calling."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u7_t2_mcq_001",
      "type": "mcq",
      "unit_id": "u7",
      "topic_id": "u7_t2-json-gen",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which option best describes why JSON was selected for generating the urgency and sentiment output for the HVAC repair message?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The scenario involves extracting urgency and sentiment from a message (e.g., about an urgent HVAC repair) and producing software-ready output. The approach emphasizes correct JSON formatting and adherence to assigned values for urgency and sentiment."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Because JSON is lightweight, language-independent, easy to parse, and supports efficient data exchange."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context states JSON is chosen for those exact qualities, making it suitable for software consumption."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Because JSON guarantees strong compile-time type safety across all SDKs."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Compile-time type safety is not mentioned; JSON is a data format, not a typed language feature."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Because JSON natively enforces domain constraints like assigned urgency values without validation."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text notes assigned values exist, but not that JSON enforces them natively."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Because JSON is the only format that can represent sentiment and urgency fields."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Other formats could represent these fields; exclusivity is not claimed."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Because JSON eliminates the need to check quotes or whitespace when formatting output."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context stresses ensuring correct JSON formatting, including quotes/whitespace, not eliminating that need."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["json", "parsing", "sdk", "data-exchange", "formatting"],
      "concept_tags": [
        "JSON format",
        "software-ready output",
        "urgency/sentiment extraction"
      ],
      "context_tags": ["HVAC message", "assigned values", "format validation"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on properties explicitly attributed to JSON in the context."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Eliminate options that claim enforcement or guarantees not mentioned."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "LLE: Lightweight, Language-independent, Easy to parse—why JSON fits."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The passage selects JSON due to being lightweight, language-independent, easy to parse, and efficient for data exchange—ideal for producing clear, software-ready outputs of urgency and sentiment."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How do these JSON qualities help when integrating the output into different SDKs or services?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A service extracts ‘urgency: high’ and ‘sentiment: neutral’ and returns them in a correctly formatted JSON object for downstream processing."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u7_t3_cc01",
      "type": "mcq",
      "unit_id": "u7",
      "topic_id": "u7_t3-category-code",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "In the described workflow, what is the primary purpose of the prompt_7 template and its associated call f_7?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context outlines several prompt templates (prompt_5, prompt_6, prompt_7, prompt_8) used with a send_request function via partial to process a customer message, assign support categories, and in some cases return outputs in JSON. One example mentions extracting specific category tags and ensuring a valid JSON format."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To extract specific category tags from an input message and return them in a valid JSON format."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states prompt_7 creates a precise template to extract specific category tags and return them as valid JSON, executed via f_7."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To switch the interface to dark mode before sending any requests."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Dark mode is mentioned in the snippet header, not as a function of prompt_7 or f_7."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To evaluate prompts across a larger data set using the SDK’s batch functions."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Evaluation with the SDK is listed as an objective, not as the role of prompt_7."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To combine urgency, sentiment, and categories extraction into a single unified prompt."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Combining multiple fields is attributed to prompt_8, not prompt_7."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To send free-form text responses without any structural constraints."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Prompt_7 emphasizes returning a valid JSON format, not free-form text."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["prompt-engineering", "category-extraction", "json-formatting"],
      "concept_tags": ["prompt_template", "valid_json", "category_tags"],
      "context_tags": ["send_request", "partial", "customer_support_messages"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Identify which prompt specifically mentions valid JSON output tied to category tags."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Differentiate between templates focused on categories only versus those combining multiple fields like urgency and sentiment."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Seven for structure: prompt_7 shapes categories into structured JSON."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The passage explicitly notes that prompt_7 is designed to extract specific category tags and return them as a valid JSON string, executed via f_7."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How does the role of prompt_7 differ from prompt_8 in terms of the breadth of extracted information?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "An email about an urgent HVAC repair could be processed to return category tags as a valid JSON object when using the prompt_7 flow."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u7_t4_ef_sdk_mcq_01",
      "type": "mcq",
      "unit_id": "u7",
      "topic_id": "u7_t4-eval-functions",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which metric in the provided evaluation function directly checks whether the model’s structured output can be parsed as intended?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context describes building custom evaluation using an SDK to automate prompt testing across scenarios. The sample code compares predictions to ground truth and aggregates dataset-wide metrics, including checks on structure and label agreement, then pretty-prints results after transposing and averaging."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "is_valid_json"
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The code sets result[\"is_valid_json\"] based on json.loads(...) succeeding, indicating the output is valid JSON."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "correct_categories"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "This measures overlap between predicted and ground-truth category sets, not parseability."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "correct_sentiment"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "This checks equality with the ground-truth sentiment label, not JSON validity."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "correct_urgency"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "This verifies urgency label correctness, unrelated to parsing."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "rate_limit"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Rate limiting controls processing pace via the iterator; it is not an evaluation metric for parseability."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["evaluation", "sdk", "metrics", "parsing", "json"],
      "concept_tags": [
        "evaluation_functions",
        "automated_testing",
        "ground_truth_comparison"
      ],
      "context_tags": [
        "generative-ai-hub-sdk",
        "dataset_aggregation",
        "tqdm_progress"
      ],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for the metric that depends on whether json.loads succeeds without an exception."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Distinguish structure validation from label accuracy checks like sentiment or urgency."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think: “Valid JSON, valid structure”—the name says it plainly."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The evaluation sets is_valid_json based on catching JSONDecodeError when attempting to load the model’s output, directly testing parseable structure; other metrics compare labels or sets."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How might you extend structural checks beyond JSON validity (e.g., required keys or schema)?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "If the model outputs malformed JSON, json.loads raises JSONDecodeError and is_valid_json becomes False."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u7_t5_mcq_001",
      "type": "mcq",
      "unit_id": "u7",
      "topic_id": "u7_t5-batch-eval",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Given the provided evaluation snippet and its described output, which statement best characterizes the dataset-scale evaluation outcome for the model labeled basic--llama3-70b?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "An evaluation runs over a small test set via evaluation_full_dataset and prints a table of metrics using pretty_print_table. A progress bar indicates completion for all tasks. Reported metrics include percentages for fields like is_valid_json, correct_categories, and another correctness dimension. The narrative emphasizes using results to refine prompts."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It achieved 100% is_valid_json and showed uneven task accuracy (e.g., strong category accuracy but low performance on another metric), suggesting room for prompt refinement."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text reports 100% is_valid_json, 85% correct_categories, and 25% on another correctness metric, and notes that results indicate scope for prompt improvement."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It failed to complete the evaluation, as indicated by a partial progress bar and missing metrics."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context states the progress bar shows 100% completion and that a table with metrics is displayed."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It produced no valid JSON outputs, implying parsing issues across the dataset."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The metric explicitly lists 100% for is_valid_json, contradicting this claim."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "All reported metrics were uniformly high (near 100%), indicating no need for further prompt tuning."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Metrics are mixed: 100% valid JSON, 85% category accuracy, and 25% on another metric; the text also suggests refining prompts."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The evaluation focused solely on runtime (31 minutes) without reporting quality metrics."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "While duration is mentioned, the context clearly includes a table with quality metrics like is_valid_json and accuracy percentages."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["evaluation", "metrics", "prompting"],
      "concept_tags": ["dataset_evaluation", "metric_interpretation"],
      "context_tags": ["progress_bar", "pretty_print_table"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on the combination of 100% completion and the presence of multiple percentage metrics."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for evidence that supports prompt refinement based on mixed metric outcomes."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think 100-85-25: valid JSON is perfect, categories are good, another metric lags—so refine prompts."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The passage emphasizes a completed run with displayed metrics: perfect JSON validity, strong category accuracy, and weak performance on another metric, motivating prompt refinement."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would you iterate on prompts to improve the weakest reported metric while preserving JSON validity?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "After running evaluation_full_dataset on 20 items, you see 100% parsing success but low correctness in one dimension; you decide to revise instructions to target that weakness."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u8_t1_001",
      "type": "mcq",
      "unit_id": "u8",
      "topic_id": "u8_t1-few-shot-and-meta",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "According to the context, which statement best distinguishes few-shot prompting from one-shot prompting?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text contrasts one-shot and few-shot prompting in terms of the number of examples and notes how additional examples help with complex tasks. It also mentions metaprompting as crafting or refining prompts to guide model responses."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Few-shot prompting provides multiple examples to guide the model, building on one-shot prompting’s single-example approach."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states that few-shot builds on one-shot by providing multiple examples and is effective for complex tasks."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Few-shot prompting removes examples entirely to avoid bias from demonstrations."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text says few-shot uses multiple examples, not zero."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Few-shot prompting is defined as metaprompting that rewrites task instructions without examples."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Metaprompting is about crafting/refining prompts; few-shot is about multiple examples."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Few-shot prompting is less suitable for complex tasks than one-shot prompting."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text indicates few-shot is particularly effective for complex tasks."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Few-shot prompting only changes output formatting rules and does not involve examples."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The description emphasizes multiple examples, not just formatting changes."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["prompting", "assessment"],
      "concept_tags": [
        "few-shot prompting",
        "one-shot prompting",
        "metaprompting"
      ],
      "context_tags": ["example-driven prompting"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on how many examples are provided in each approach."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Separate the idea of refining instructions (metaprompting) from using demonstrations (few-shot)."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "One-shot = one example; few-shot = a few examples."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Few-shot extends one-shot by supplying multiple examples, which the text notes helps with complex tasks; alternatives either remove examples or conflate with metaprompting."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Explain why multiple examples might improve performance on nuanced tasks compared to a single example."
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A classifier prompt that shows several labeled messages before the new input exemplifies few-shot prompting."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u8_t2_fs_mcq_001",
      "type": "mcq",
      "unit_id": "u8",
      "topic_id": "u8_t2-few-shot-eval",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which practice ensures that the sampled few-shot examples can be reproduced across runs when building prompts from a development set?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The workflow samples k examples from a development set, formats them into a template, and later evaluates refined prompts against a baseline. A specific step is taken so that sampling behavior remains consistent across experiments."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Setting a fixed random seed before sampling (e.g., random.seed(42))"
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text notes using random.seed(42) to make random sampling reproducible."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Increasing k to include the entire development set"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text sets k=3; expanding k does not guarantee reproducibility of random choice."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Switching the interface to dark mode"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Dark mode is mentioned but unrelated to reproducible sampling."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Using a metaprompt template for output formatting"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Metaprompting structures examples but does not control randomness in sampling."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Evaluating refined prompts against a baseline on test data"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Evaluation compares performance; it does not determine whether sampling is reproducible."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": [
        "few-shot",
        "evaluation",
        "reproducibility",
        "sampling",
        "prompting"
      ],
      "concept_tags": ["random seed", "few-shot examples", "dev set sampling"],
      "context_tags": ["baseline comparison", "templates", "metaprompting"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on the step that controls randomness rather than formatting or evaluation."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Recall the explicit function call mentioned that makes selection consistent across runs."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Seed to see it again: set the seed to reproduce selections."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Reproducible sampling is achieved by fixing the RNG state using random.seed(42) before calling random.sample on the dev set."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would changing the seed value affect the selected examples while remaining reproducible?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Before sampling k=3 examples via random.sample(dev_set, k), call random.seed(42) so the same three items are chosen each run."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u8_t3_g1",
      "type": "mcq",
      "unit_id": "u8",
      "topic_id": "u8_t3-guide-generation",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "According to the provided prompt, what is the primary purpose of the guide that the model is asked to generate?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context describes a prompt that formats examples, passes them to a model, and requests step-by-step instructions to help distinguish between specified options for a given key. The generated guides are stored per key to support classification tasks."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To create step-by-step instructions that help distinguish between specified options for a given key using provided examples."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states the model uses examples to generate step-by-step guides for distinguishing options for each key."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To correct mislabeled examples and relabel the dataset automatically."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It notes labels might be incorrect, but the task is to generate a guide, not to relabel data."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To evaluate model performance and compute accuracy metrics across tasks."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "No evaluation or metrics computation is described; only guide generation is mentioned."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To produce a dataset of new examples for each category."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The process uses existing examples; it does not generate new example data."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To convert free-form text into a fixed taxonomy by mapping to database IDs."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "There is no mention of taxonomy IDs or mapping; the focus is on instructional guides."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["prompting", "guide-generation", "classification"],
      "concept_tags": [
        "instruction_guides",
        "options_vs_key",
        "example-driven"
      ],
      "context_tags": ["template_prompt", "guide_storage", "step_by_step"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on what the output artifact is (a guide) and what it is used for."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Note that examples are input to the process; consider what the model produces from them."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Guide = instructions to distinguish; examples feed, guide out."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The prompt instructs a model to turn provided examples into step-by-step instructions that help distinguish among options for each key and to store these guides for classification tasks."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would storing guides per key (e.g., urgency, sentiment) support consistent classification?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Given examples labeled with categories, the model outputs structured steps under each category to tell them apart."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u8_t4_q1",
      "type": "mcq",
      "unit_id": "u8",
      "topic_id": "u8_t4-apply-guides",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "In the provided prompt_12 template, how are the urgency, sentiment, and support-category guides incorporated into the classification prompt?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context describes a prompt that classifies a message into urgency, sentiment, and support categories using predefined guides. The template shows placeholders for each guide and for the input, and asks for a JSON output constrained to listed label sets."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "By inserting each guide via its corresponding placeholder block (e.g., {{?guide_urgency}}, {{?guide_sentiment}}, {{?guide_categories}}) within the prompt sections before the input and output instructions."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The template explicitly shows separate sections that include the guides through placeholders for urgency, sentiment, and categories."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "By embedding all guides into a single combined placeholder {{?guide_all}} at the end of the prompt."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context lists distinct placeholders for each guide; no combined {{?guide_all}} is shown."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "By referencing guides implicitly without placeholders, relying on model defaults."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The prompt uses explicit placeholders ({{?guide_...}}), not implicit references."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "By attaching guides as external files rather than including them in the prompt text."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context indicates guides are injected into the prompt via placeholders, not external attachments."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "By placing the guides only after the JSON output instructions to avoid influencing classification."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Guides appear in sections before the input and the output request, to inform the classification."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["prompting", "guides", "classification"],
      "concept_tags": ["placeholders", "guide_application"],
      "context_tags": [
        "urgency_guide",
        "sentiment_guide",
        "support_categories"
      ],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for where {{?guide_...}} placeholders appear in the template."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Note the sequence: guides, then input, then JSON output constraints."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "G-I-O: Guides first, then Input, then Output constraints."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The template uses explicit placeholders to inject each guide section into the prompt prior to presenting the input and specifying the constrained JSON output."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How might separating each guide section improve clarity for the model versus combining them?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Example placeholders used: {{?guide_urgency}}, {{?guide_sentiment}}, {{?guide_categories}}, followed by {{?input}}."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u8_t5_mcq_01",
      "type": "mcq",
      "unit_id": "u8",
      "topic_id": "u8_t5-guided-few-shot",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "In the described setup, what role does providing both few-shot examples and guides play when generating the response for a message classification task?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The code constructs a request that includes a prompt template for classifying messages by urgency, sentiment, and support categories, and it passes both example instances and guiding constraints alongside option lists into the request function."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They jointly steer the model toward consistent, structured JSON outputs while illustrating the desired labeling behavior."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context notes combining examples (behavior illustration) with guides (constraints) to produce structured JSON results."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They ensure the model returns identical outputs on every run, removing probabilistic variation."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The note explicitly mentions outputs may vary due to probabilistic factors; consistency is not guaranteed."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They fine-tune the underlying model weights to permanently encode the schema."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The description involves prompting at inference time, not weight-level fine-tuning."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They replace the need for a prompt by directly editing the input message."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "A prompt template is still created and used; examples and guides complement it rather than replace it."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They limit the task to predicting urgency only, omitting sentiment and categories."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The task includes urgency, sentiment, and support categories; nothing suggests restricting to urgency alone."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["few-shot", "guidance", "structured-output", "prompting"],
      "concept_tags": [
        "few-shot-learning",
        "guided-generation",
        "JSON-structured-output"
      ],
      "context_tags": ["message-classification", "prompt-template"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Consider how examples demonstrate behavior while guides constrain format."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Revisit the mention of structured JSON outputs and how they are achieved."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "EGG: Examples Guide Generation—examples show, guides shape."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The setup passes examples and guiding constraints so the model both understands desired labeling and adheres to a structured JSON output, not to guarantee determinism or fine-tune weights."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would results differ if you used only guides without examples, or only examples without guides?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A guide enforces JSON keys, while a few-shot example shows how to map a message to urgency, sentiment, and category values."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u9_t1_mm_mcq_001",
      "type": "mcq",
      "unit_id": "u9",
      "topic_id": "u9_t1-why-multi-model",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which reason best explains why a team might combine multiple models for a single business problem, according to the context?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context discusses evaluating different models and techniques, noting that models can be trained on varied datasets, optimized for different tasks, and that a hub can provide flexible access to a broad range of models and deployment options to improve outcomes and ROI."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To leverage specialization across tasks by selecting models optimized for different modalities or functions."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states that different LLMs are trained on varied datasets and optimized for specific tasks (e.g., text, image, speech), motivating use of multiple specialized models."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Because a single contract per model always maximizes ROI compared to any hub approach."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context argues the opposite—eliminating individual contracts via a hub can boost ROI."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To guarantee identical performance across all deployment environments."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text mentions deployment flexibility, not guaranteed identical performance everywhere."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "To avoid evaluating techniques and combinations when analyzing results."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text notes that techniques and their combinations were evaluated; it does not suggest avoiding evaluation."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Because using multiple models removes the need for any cloud deployment decisions."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context says solutions can be deployed to any cloud, not that deployment decisions become unnecessary."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["multi-model", "specialization", "roi"],
      "concept_tags": ["model_specialization", "deployment_flexibility"],
      "context_tags": ["generative_ai_hub", "evaluation"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for the option that aligns with varied datasets and task optimization."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Eliminate statements that promise guarantees or absolute outcomes not stated in the text."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think MIX: Modalities, Improvements, and eXpertise—combine models for specialized strengths."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The passage highlights that different models excel at different tasks and modalities, so combining them leverages their specialized strengths. Other options misstate ROI, promise guarantees, or contradict the evaluation and deployment points."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Describe a scenario where one model handles text generation while another handles image tasks to improve overall results."
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A workflow uses one model for speech recognition and another for text summarization, combining strengths to solve a call-center problem."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u9_t2_mcq_001",
      "type": "mcq",
      "unit_id": "u9",
      "topic_id": "u9_t2-launchpad-config-deploy",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "In SAP AI Launchpad, which action best aligns with configuring and deploying different models with minimal code?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context mentions the Configuration tab in SAP AI Launchpad under ML Operations, availability of executable serving templates for models (including foundation-models scenarios and sources like azion-models), and the role of orchestration services/workflows to help configure models with minimal code. SAP Note 3437766 provides details on model availability, data centers, token conversion, and rate limits."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Select an executable serving template for the desired model in the Configurations section and use orchestration to streamline setup."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Matches the description: configurations occur in the Launchpad’s Configurations section, models are offered as executable templates, and orchestration helps minimize code."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Manually install model binaries on a separate compute node before importing them into Launchpad."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text does not mention manual binary installation; instead it emphasizes templates and configuration within Launchpad."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Edit SAP Note 3437766 to add the target model and trigger deployment from the note."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "SAP Note 3437766 is for information (availability, data centers, token conversion, rate limits), not a deployment mechanism."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Use the video tutorial interface to automatically deploy any listed model without configuration."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The video is referenced for learning; the text still centers deployment via configurations and templates, not automatic video-driven deployment."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Configure models exclusively through Unit 1 scripts, bypassing the Launchpad interface."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "While Unit 1 provides steps, the context highlights the Configuration tab and templates within Launchpad rather than bypassing the interface."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["launchpad", "configuration", "deployment", "orchestration"],
      "concept_tags": [
        "SAP AI Launchpad",
        "Configurations",
        "Executable templates",
        "Orchestration"
      ],
      "context_tags": [
        "foundation-models",
        "generative AI hub",
        "SAP Note 3437766"
      ],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on actions performed inside the Launchpad’s Configurations section."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Recall that executable serving templates and orchestration aim to reduce custom code."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "COT: Configure in Launchpad, pick a Template, leverage Orchestration."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The workflow centers on using the Configurations section with executable serving templates, aided by orchestration services, rather than manual installs, editing notes, or bypassing the interface."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How do templates and orchestration together reduce the need for custom deployment scripts?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A user selects a foundation-model template from the Configurations section, sets parameters, and relies on workflow orchestration to deploy with minimal custom code."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u9_t3_mcq_001",
      "type": "mcq",
      "unit_id": "u9",
      "topic_id": "u9_t3-model-eval-setup",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which action best reflects how the SDK is used to compare different models for the Facility solutions problem?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The lesson describes evaluating multiple models for a Facility solutions scenario using generative-ai-hub-sdk. Examples reference calling an evaluation function over a small test set, storing results in a dictionary, and printing a table to compare metrics across models like mixtral-8x7b and gpt-4o."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Invoke an evaluation function on a small test set for each target model and aggregate results into a comparison table."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context shows evalulation_full_dataset on test_set_small for different models and pretty_print_table to compare outcomes."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Train each model from scratch on the Facility dataset before any comparison."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text discusses evaluating existing models, not training them from scratch."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Only run the basic prompt on a single model and assume other models will behave similarly."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Multiple models (e.g., mixtral-8x7b, gpt-4o) are evaluated; not just one."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Manually inspect raw outputs without recording any structured metrics."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context mentions a table of metrics (e.g., valid JSON, categories, sentiment, urgency), implying structured evaluation."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Use metaprompting and few-shot only for gpt-4o and avoid applying them to other models."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text indicates applying few-shot and metaprompting to mixtral-8x7b as well, not exclusively to gpt-4o."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["evaluation", "sdk", "llm-comparison"],
      "concept_tags": ["model_evaluation", "sdk_usage"],
      "context_tags": ["facility_solutions", "generative-ai-hub-sdk"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on how results are gathered and compared across models."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for mentions of running the same evaluation over multiple models and summarizing outcomes."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Evaluate, collect, compare: run function, store results, print table."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The workflow described runs an evaluation function on a small test set for various models, stores results in a dictionary (overall_result), and prints a table to compare metrics like valid JSON and category correctness."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would you extend the evaluation to include another model while keeping the comparison consistent?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Call evalulation_full_dataset(test_set_small, f_13, _model='gpt-4o'), store into overall_result, then pretty_print_table(overall_result)."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u9_t4_mrq1",
      "type": "mcq",
      "unit_id": "u9",
      "topic_id": "u9_t4-model-results",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "According to the context, which statement best characterizes gemini-1.5-flash in the evaluation workflow?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context discusses running evaluations over a small test set, pretty-printing a results table, and notes that LLM outputs can vary due to probabilistic behavior and settings. It also mentions trade-offs between model cost, speed, and performance, and references a specific Google model used in examples."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It is described as the cheapest and fastest Google model available on the generative AI hub used in the examples."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context explicitly states that gemini-1.5-flash is the cheapest and fastest Google model available on the generative AI hub."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It guarantees identical outputs across runs due to a deterministic architecture."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context states outputs vary because of probabilistic nature, temperature, and non-determinism."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It is positioned as the most accurate model regardless of task and budget."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context discusses cost-performance trade-offs, not universal accuracy supremacy."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It cannot be used within the provided evaluation function call."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The snippet shows evalulation_full_dataset(..., _model='gemini-1.5-flash'), indicating it is used in the call."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It requires disabling table printing to view evaluation results."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context mentions pretty_print_table(overall_result) to display results; no requirement to disable printing is stated."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["evaluation", "model-selection", "cost-speed-tradeoff"],
      "concept_tags": [
        "probabilistic-outputs",
        "cost-performance",
        "model-choice"
      ],
      "context_tags": [
        "gemini-1.5-flash",
        "evaluation-results",
        "generative-ai-hub"
      ],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for the explicit characterization of gemini-1.5-flash in the text."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Eliminate options that claim determinism or universal superiority."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Flash = fast and frugal in this context."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The passage labels gemini-1.5-flash as the cheapest and fastest Google model on the generative AI hub and shows it being used in the evaluation function. It also emphasizes non-determinism and trade-offs, ruling out claims of deterministic outputs or universal best accuracy."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How do probabilistic outputs influence your choice of model for cost-sensitive applications?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Example: Using evalulation_full_dataset(..., _model='gemini-1.5-flash') and then pretty_print_table to compare results across runs."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u9_t5_mcq_001",
      "type": "mcq",
      "unit_id": "u9",
      "topic_id": "u9_t5-eval-summary",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which choice best reflects the evaluation takeaway for balancing model selection and prompting in SAP’s generative AI hub?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The summary discusses leveraging SAP’s generative AI hub and SDK, orchestration for complex workflows, and evaluating prompts to ensure accuracy and relevance at scale. It also notes tradeoffs among cost, scalability, and performance when choosing LLMs."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Use a few-shot prompt with meta--llama3-70b-instruct to obtain structured outputs while balancing cost, scalability, and performance."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The summary explicitly states that, considering cost, scalability, and performance, few-shot prompting with meta--llama3-70b-instruct yields structured responses suitable for downstream use."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Always choose the highest-accuracy model, regardless of cost or scalability constraints."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text emphasizes balancing cost, scalability, and performance, not prioritizing accuracy alone."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Rely solely on zero-shot prompting because orchestration already ensures accuracy across large datasets."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text highlights evaluating prompts for accuracy and relevance; it does not claim orchestration alone guarantees accuracy."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Avoid the SDK when deploying LLMs within SAP AI Core to reduce integration complexity."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The SDK is presented as enabling and streamlining access to LLMs and orchestration, not something to avoid."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Favor static pricing models over outcome-based approaches to drive higher adoption."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context mentions innovative strategies like outcome-based pricing as a competitive advantage, not static pricing."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["evaluation", "model-selection", "prompting"],
      "concept_tags": [
        "few-shot prompting",
        "cost-performance tradeoffs",
        "SAP generative AI hub"
      ],
      "context_tags": ["SDK", "orchestration", "prompt evaluation"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for the option that mentions both prompting strategy and tradeoffs among cost, scalability, and performance."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Eliminate choices that ignore prompt evaluation or the role of the SDK/orchestration."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "B-A-L: Balance cost, Accuracy needs, and LLM prompting."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The evaluation summary concludes that few-shot prompting with meta--llama3-70b-instruct can produce structured outputs while balancing cost, scalability, and performance, aligning with the hub’s SDK and orchestration capabilities."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would your prompting strategy change if cost constraints tightened further?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "An application generates a standardized JSON summary from user queries by using a few-shot template with the selected LLM via the SDK and orchestration."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u10_t1_mcq_001",
      "type": "mcq",
      "unit_id": "u10",
      "topic_id": "u10_t1-recap-to-grounding",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which option best connects evaluation and advanced prompting practices to the transition toward grounding (RAG) in AI applications?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context discusses evaluation functions for assessing prompts, advanced prompt engineering (few-shot, metaprompting), exploring and filtering models via catalog/leaderboard modes, and the role of Retrieval Augmented Generation (RAG)/document grounding using indexed repositories to provide accurate, contextually appropriate responses."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Use evaluation to refine prompts and model choices, then apply RAG/document grounding to supply relevant documents that improve response accuracy."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text ties evaluation and advanced prompting to selecting suitable models and then using RAG/document grounding to provide contextually appropriate, accurate responses from indexed sources."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Replace all prompting with leaderboard mode since it automatically grounds responses without documents."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Leaderboard mode ranks or compares models; the text does not claim it grounds responses or removes the need for documents."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Skip evaluation once few-shot prompting is used because examples guarantee specificity and accuracy."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text presents evaluation as essential; few-shot helps but does not eliminate the need to assess performance."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Use catalog mode to reduce cost metrics only; grounding is unrelated to model selection."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Catalog mode provides metadata (including cost), but grounding (RAG) is relevant to providing accurate, contextual responses, not isolated from selection."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Adopt metaprompting to replace document repositories like SharePoint, removing the need for retrieval."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states RAG uses indexed repositories for retrieval; metaprompting does not replace documents."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": [
        "evaluation",
        "prompt_engineering",
        "grounding",
        "rag",
        "model_selection"
      ],
      "concept_tags": [
        "evaluation functions",
        "few-shot prompting",
        "metaprompting",
        "catalog/leaderboard modes",
        "RAG/document grounding"
      ],
      "context_tags": ["recap", "bridge to grounding", "model selection"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Link the sequence: evaluate and prompt well, choose a model, then add documents via RAG."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for the option that leverages indexed repositories to improve accuracy."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "E-P-M-G: Evaluate, Prompt, Model, Ground with docs."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The passage positions evaluation and advanced prompting as foundations for selecting models (via catalog/leaderboard), then using RAG/document grounding to retrieve relevant documents for accurate, contextual responses. Option A reflects this flow; others overclaim or disconnect the steps."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Describe how you would measure improvements after adding RAG to an already evaluated prompt."
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A team evaluates few-shot prompts across models using catalog/leaderboard data, then enables RAG over SharePoint to answer policy queries with precise citations."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u10_t2_ml_001",
      "type": "mcq",
      "unit_id": "u10",
      "topic_id": "u10_t2-model-library",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "When exploring a model library to select an AI model for a business scenario, which criterion best aligns with the lesson’s focus on safe, efficient deployment without retraining?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The lesson emphasizes selecting AI solutions for business applications by leveraging foundational concepts like prompt engineering, integration across components, and safeguards such as data masking and content filtering to improve efficiency and decision-making."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Support for prompt engineering to refine model behavior for specific business use cases"
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text highlights prompt engineering for safe, scalable experimentation to improve model performance for business applications."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Availability of end-to-end retraining pipelines bundled with every model"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context mentions domain knowledge without retraining; retraining pipelines are not emphasized."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Exclusive focus on marketing datasets built into the model"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Marketing is one example, but the lesson spans multiple business areas and does not require built-in datasets."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Ignoring integration features to prevent dependency on external systems"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text stresses seamless integration with systems and data sources to enhance operations."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Prioritizing models that disable content filtering to maximize output variety"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Content filtering is presented as a safeguard; disabling it contradicts the lesson’s emphasis on safety."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["model-library", "selection-criteria", "prompt-engineering"],
      "concept_tags": ["prompt-engineering", "integration", "safeguards"],
      "context_tags": ["business-scenarios", "efficient-deployment"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for features that improve safety and scalability without retraining."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Recall how the lesson frames integration and guardrails as core selection factors."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "PIS: Prompting, Integration, Safeguards—key filters for model selection."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Prompt engineering aligns with the lesson’s approach to tailoring model behavior safely and efficiently, while the other options either contradict the emphasis on not retraining, over-narrow the scope, undermine integration, or remove safeguards."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Describe how you would use prompt engineering to adapt a model to a utility operations scenario mentioned in the lesson."
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A team refines prompts to personalize customer messages without modifying the underlying model weights."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u11_t1_mcq_001",
      "type": "mcq",
      "unit_id": "u11",
      "topic_id": "u11_t1-scenarios-by-domain",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which scenario best illustrates how instant access to diverse LLMs benefits a finance team?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context discusses access to multiple LLMs, streamlined workflows, and document grounding to improve accuracy across domains such as finance and logistics."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Selecting the most suitable model per task to speed AI development and improve financial analysis and decision-making."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The finance scenario explicitly states instant access to various LLMs enables choosing the best model for each task, accelerating development and improving analysis and decisions."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Using document grounding to reduce hallucinations in AI-generated customer support replies."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Document grounding is mentioned for improving response accuracy, but this describes a customer service use, not the finance-specific benefit of diverse LLM access."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Automating inventory routing by shortening complex AI solution development cycles."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "This aligns with logistics and streamlined workflows, not the finance use of selecting among diverse LLMs."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Applying data masking on SAP BTP to protect sensitive records during chatbot interactions."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Data masking on BTP is referenced but not tied to the finance benefit of choosing among multiple LLMs."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Improving customer satisfaction by standardizing a single LLM across all service channels."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text emphasizes access to a broad range of LLMs, not standardizing on a single model, and this option targets customer service, not finance."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["cross-industry", "scenarios", "llm-access"],
      "concept_tags": [
        "LLM_orchestration",
        "finance_use_case",
        "workflow_streamlining"
      ],
      "context_tags": ["finance", "logistics", "grounding"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for the finance example that mentions choosing the best model per task."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Distinguish finance benefits from logistics workflows and customer service grounding."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Finance picks the fit: choose the best model for the job."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "In the finance scenario, instant access to various LLMs lets teams select the optimal model per task, accelerating AI development and improving analysis and decisions. Other options focus on grounding, logistics streamlining, data masking, or single-model standardization, which do not match the finance-specific benefit."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would selecting different LLMs per task change the development timeline for a financial analytics project?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A finance team uses one LLM for summarizing earnings calls and another for risk scoring, reducing time-to-insight."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u11_t2_mcq_001",
      "type": "mcq",
      "unit_id": "u11",
      "topic_id": "u11_t2-hub-value-prop",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best captures a primary value of the generative AI hub’s orchestration service described in the context?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context highlights a hub that simplifies access to advanced AI by offering orchestration across leading models with a single virtual deployment, low-code tooling/SDKs for faster development, and grounding extracted information into structured formats for user-defined applications."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It provides access to multiple leading AI models through a single virtual deployment, reducing management complexity."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context states the orchestration service requires only one virtual deployment to access all leading models, simplifying management."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It replaces the need for SDKs by enforcing a no-code-only approach."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context mentions low-code and simple SDKs, not eliminating SDKs or enforcing no-code only."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It primarily focuses on facility upkeep to ensure impeccable maintenance."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Facility upkeep is unrelated to the hub’s orchestration; this appears in unrelated text fragments."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It guarantees improved e-mail response times by categorizing complaints automatically."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "While categorization is mentioned, the orchestration value is about unified deployment and model access, not guaranteed response times."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It removes the need for grounding extracted information into structured formats."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context highlights grounding into structured formats as a challenge/need, not something the orchestration removes."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["orchestration", "low-code", "hub-value"],
      "concept_tags": [
        "single-virtual-deployment",
        "model-access-simplification",
        "grounding"
      ],
      "context_tags": ["generative-ai-hub", "orchestration-service"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for wording about simplifying access to many models with minimal deployments."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Eliminate options that shift focus to facilities or guarantees not stated in the context."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think ONE: one virtual deployment for MANY models."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The orchestration service’s core value is unifying access to leading models via a single virtual deployment, reducing operational complexity. Other options introduce claims not supported or irrelevant to the provided context."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How does a single virtual deployment change governance and scaling compared to managing each model separately?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A team deploys once and can switch or add leading models without spinning up new deployments for each provider."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u11_t3_001",
      "type": "mcq",
      "unit_id": "u11",
      "topic_id": "u11_t3-facility-scenario",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Within the Facility Solutions scenario, which action best exemplifies using document grounding to improve handling of customer-reported maintenance issues?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The scenario discusses leveraging a generative AI hub with an orchestration service to connect business logic and AI. It highlights grounding extracted information in internal systems and understanding e-mail context to streamline categorization, prioritization, and accuracy—while ensuring data privacy."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Linking extracted issue details from customer messages to entries stored in SAP HANA vector databases so they are addressed promptly."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text explicitly notes grounding extracted information in SAP HANA vector databases to ensure prompt handling."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Auto-approving all maintenance requests to reduce manual effort in the service queue."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Reducing manual effort is a goal, but auto-approval is not stated and could conflict with informed decision-making."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Forwarding every customer e-mail to a human agent without AI processing to ensure accuracy."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The scenario emphasizes AI-driven categorization, prioritization, and grounding—not bypassing AI."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Storing customer e-mails exclusively in a generic file share for later analysis."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Grounding involves internal systems like SAP HANA vector databases, not a generic file store."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Replacing the orchestration service with ad hoc scripts to connect business logic and AI components."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text presents the orchestration service as the enabler for connecting business logic with AI components."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["facility_solutions", "document_grounding", "generative_ai_hub"],
      "concept_tags": [
        "grounding",
        "orchestration_service",
        "SAP_HANA_vector_db"
      ],
      "context_tags": [
        "email_categorization",
        "maintenance_issues",
        "data_privacy"
      ],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Identify which option ties extracted information back to internal systems rather than bypassing them."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for a reference to how prompt issue handling is supported."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Ground it to HANA: grounding links facts to internal vectors for reliable action."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The scenario specifically cites grounding extracted details in SAP HANA vector databases to ensure issues are addressed promptly; the other options either bypass AI, avoid grounding, or remove orchestration."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Explain how grounding in vector databases can aid prioritization in the maintenance workflow."
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A customer e-mail about a broken HVAC unit is parsed; key entities are matched to grounded vectors in SAP HANA, triggering the appropriate maintenance workflow promptly."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u11_t4_mcq_01",
      "type": "mcq",
      "unit_id": "u11",
      "topic_id": "u11_t4-challenges-needs",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which benefit best explains why the orchestration service is needed within a generative AI hub?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The orchestration service coordinates AI components in a generative AI hub to improve workflow efficiency, integration, and management. It supports structured processes across LLMs and related modules without exposing specific implementation outcomes."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It enriches AI requests with relevant business context, reducing custom data connections while using existing business data."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states orchestration modules include grounding that adds business context, lowering the need for custom connections and leveraging existing data."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It eliminates the need to manage dependencies among AI components by removing them entirely."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text says orchestration manages dependencies, not eliminates them."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It replaces LLMs with rule-based systems to improve security."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text mentions coordinating LLMs, not replacing them."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It mandates building new proprietary data sources for every workflow."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text emphasizes using existing business data, not mandating new proprietary sources."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It focuses solely on content filtering and does not integrate diverse components."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text highlights a modular framework connecting diverse components; content filtering is not the sole focus."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["orchestration", "grounding", "ai-workflows"],
      "concept_tags": ["orchestration service", "grounding", "dependencies"],
      "context_tags": ["generative AI hub", "workflow integration"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for language about reducing custom data connections while leveraging existing data."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Eliminate options that remove components or dependencies rather than coordinating them."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think: Orchestrate = Organize with context, not replace parts."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The orchestration service provides grounding that enriches AI requests with relevant business context, enabling the use of existing data and reducing custom connections, while coordinating components and managing dependencies."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How does grounding reduce the need for custom data connections in a real business scenario?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A company links its LLM to existing CRM data through orchestration grounding, avoiding building a new connector for each query."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u12_t1_m01",
      "type": "mcq",
      "unit_id": "u12",
      "topic_id": "u12_t1-orchestration-modules",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which capability best explains how the orchestration service simplifies integration across different AI models?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The orchestration service underpins automated AI workflows, emphasizing privacy (content filtering, data masking), grounded responses, and streamlined integration to support robust, scalable solutions."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Providing a harmonized API that offers uniform access across models."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states that the orchestration layer provides a harmonized API across all models for seamless integration."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Automatically increasing hardware resources for every model invocation."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Resource scaling is not described; the text focuses on workflow backbone, privacy, grounding, and API harmonization."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Replacing model-specific SDKs with a proprietary orchestration runtime engine."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text mentions harmonized API access, not replacing SDKs with a runtime engine."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Embedding training data directly into each API request to improve accuracy."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Accuracy is improved via grounding and filtering, not by embedding training data into requests."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Disabling content filtering to reduce latency across services."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text explicitly highlights content filtering and data masking for privacy, not disabling them."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["orchestration", "integration", "api-harmonization", "privacy"],
      "concept_tags": [
        "harmonized_api",
        "workflow_backbone",
        "content_filtering",
        "grounding"
      ],
      "context_tags": ["sap_generative_ai_hub", "orchestration_service"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for wording that emphasizes uniformity across different models."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Exclude options that add mechanisms not mentioned, like runtime replacements or disabled privacy features."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think HARMONIZE: one interface, many models."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "API harmonization is identified as the mechanism that enables seamless integration by providing uniform access across models."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How does a uniform API reduce development complexity in multi-model solutions?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A team switches between two LLM providers without changing their application code because the orchestration layer exposes the same API contract."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u12_t2_mcq_001",
      "type": "mcq",
      "unit_id": "u12",
      "topic_id": "u12_t2-harmonized-api",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best describes how the harmonized API and orchestration service support development flow in the generative AI hub?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The material mentions a harmonized API used to build and deploy AI workflows across various models, and an orchestration workflow editor with modules like grounding, templating, data masking, input filtering, model configuration, and output filtering. Some modules are mandatory, and the service must be configured before use."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They enable faster time-to-market by letting developers use common code across models and configure required modules in the orchestration workflow."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Supported: the text notes harmonized code across models and streamlined development for faster time-to-market, plus configuration of modules in the workflow editor."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They eliminate the need to configure the service before accessing orchestration features."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Contradicted: the text states you must configure the service before accessing it."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They allow all modules, including templating and model configuration, to be hidden as optional."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Contradicted: templating and model configuration are mandatory; only optional modules can be hidden."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They primarily focus on aging multiple APIs rather than unifying access to models."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Unsupported: the emphasis is on harmonized code and streamlined development, not on maintaining aging APIs."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "They remove the need for data masking or content filtering by default."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Unsupported: the text highlights modules such as data masking and content filtering as part of the orchestration, not removed by default."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["harmonized_api", "orchestration", "workflow"],
      "concept_tags": [
        "streamlined_development",
        "mandatory_modules",
        "service_configuration"
      ],
      "context_tags": ["generative_ai_hub", "workflow_editor"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Recall which modules are described as mandatory vs. optional in the workflow editor."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for statements aligning with faster time-to-market and common code across models."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think HARMONY = common code + configured modules → faster launch."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The harmonized API provides common code across models, and the orchestration service requires configuration with mandatory modules, enabling efficient workflow creation and faster time-to-market."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which specific modules are mandatory, and how does that influence pipeline setup?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A developer enables data masking and input filtering, keeps mandatory templating and model configuration, and deploys a cross-model workflow quickly."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u12_t3_mcq_001",
      "type": "mcq",
      "unit_id": "u12",
      "topic_id": "u12_t3-workflow-json",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "In the Orchestration Workflow JSON interface, which action correctly pairs with its function?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The Workflow/JSON button opens an interface where you can work with a JSON representation of an orchestration workflow, including options related to managing that JSON file."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Using the Upload button to submit an edited JSON file to the workflow (subject to a 200KB limit)."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states you can upload your edited JSON file with a maximum file size of 200KB."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Using the Download button to export a ZIP archive containing the workflow JSON and assets."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text only mentions downloading the JSON file of the workflow orchestration, not a ZIP with assets."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Editing the JSON directly replaces the need to use Upload or Download."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Editing is mentioned, but the text still specifies separate Upload and Download buttons for file operations."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Using the Upload button to increase the file size limit beyond 200KB when needed."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The limit is stated as 200KB; there is no indication it can be increased via Upload."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Accessing the Workflow/JSON button to install SDK model integrations."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "SDK installation details are separate; the Workflow/JSON button pertains to the workflow JSON interface."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["workflows", "json", "ui-actions"],
      "concept_tags": ["upload", "download", "file-limits"],
      "context_tags": ["orchestration", "dashboard"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Match each button name to the described file operation in the interface."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for any explicit constraints mentioned for file handling."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "UD: Upload pushes edited JSON in (limited), Download pulls JSON out."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The interface allows uploading an edited JSON file with a 200KB cap and downloading the workflow’s JSON via dedicated buttons."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Why might a size limit exist for uploading workflow JSON files?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A user edits a workflow step locally and then clicks Upload to apply the 150KB JSON file."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u12_t4_mcq_001",
      "type": "mcq",
      "unit_id": "u12",
      "topic_id": "u12_t4-sdk-release-notes",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which option best reflects an SDK update or reference noted in the release summary?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The summary mentions installation extras via pip, several capability enhancements, and pointers to official documentation for detailed release notes."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Support for streaming responses is among the key updates."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "“Streaming support” appears explicitly in the list of key updates."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The SDK drops API logging to reduce overhead."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text lists “API logging” as a key update, not its removal."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Installation is limited to the base package without extras."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context shows extras: pip install \"generative-ai-hub-sdk[google, amazon]\"."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "No new models are supported in this release."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "“New model support” is explicitly listed as a key update."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The release notes advise avoiding official documentation for details."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It advises referring to the official documentation for detailed release notes."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["sdk", "release-notes", "install"],
      "concept_tags": [
        "streaming-support",
        "installation-extras",
        "api-logging"
      ],
      "context_tags": ["generative-ai-hub-sdk", "updates", "references"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Scan the list of “Key updates” and match wording exactly."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Check the install command to see whether extras are encouraged or excluded."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think E-P-S-D-A-N: Enhanced access, Prompt templates, Streaming, Debug logs, API logging, New models."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Streaming support is directly listed among the key updates; other choices contradict the text’s mentions of extras, API logging presence, and new model support, or misstate the documentation guidance."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "From the key updates list, which other items could impact developer workflows and why?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A developer enabling streaming to process tokens as they arrive leverages the “streaming support” update."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u12_t5_mcq_001",
      "type": "mcq",
      "unit_id": "u12",
      "topic_id": "u12_t5-limitations",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best reflects a current limitation and a related best-practice implication described in the notes?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The orchestration service integrates and manages different LLMs but lacks direct function calling. Developers still use vector embeddings with SAP HANA Cloud’s vector engine for semantic capabilities and RAG."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Because direct function calling is unavailable, developers should add custom layers to obtain function-specific outputs while leveraging the vector engine for retrieval."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states the service cannot directly call functions, requiring additional layers; it also highlights using SAP HANA’s vector engine for storage/retrieval and RAG."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Direct function calling is fully supported, so no additional orchestration or layers are needed."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Contradicts the stated limitation that direct function calling is not available."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Function calling is unavailable, and the vector engine cannot be used for semantic search."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text explicitly supports semantic search and RAG via the vector engine."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Since embeddings are unsupported, developers must avoid SAP HANA Cloud for multimodel processing."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Opposite of the text, which describes embeddings stored/managed in SAP HANA Cloud’s vector engine."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The orchestration service replaces the need for any retrieval components when handling high-dimensional vectors."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text emphasizes the vector engine for storage/retrieval; orchestration does not eliminate retrieval needs."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": [
        "limitations",
        "best-practices",
        "function-calling",
        "vector-engine"
      ],
      "concept_tags": ["function_calling_gap", "vector_embeddings", "RAG"],
      "context_tags": ["orchestration_service", "SAP_HANA_Cloud"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Identify what is explicitly unavailable in the orchestration service."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for how developers are advised to proceed despite that limitation."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "No functions? Add layers; need meaning? Use vectors."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The notes highlight a gap—no direct function calling—requiring extra layers, and reaffirm the role of SAP HANA’s vector engine for embeddings-driven retrieval and RAG."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Describe how adding a custom layer could interact with the vector engine to produce function-specific results."
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A developer adds a middleware that interprets structured commands and queries SAP HANA embeddings to assemble an answer."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u13_t1_ve_basics_mcq_001",
      "type": "mcq",
      "unit_id": "u13",
      "topic_id": "u13_t1-hana-vector-engine",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best characterizes the SAP HANA Vector Engine as described?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The description highlights that SAP HANA Vector Engine stores and analyzes high-dimensional vectors (e.g., text embeddings) within SAP HANA Cloud’s multimodel environment and mentions vector similarity based on the angle between vectors."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It enables storing and analyzing high-dimensional embeddings alongside relational, graph, spatial, and document data within SAP HANA Cloud."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Directly supported: it stores, processes, and analyzes high-dimensional vectors and is part of HANA Cloud’s multimodel capabilities (relational, graph, spatial, document)."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It replaces the need for any external embedding models by generating all embeddings natively in the database."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text mentions storing and analyzing embeddings, not replacing external embedding models or generating all embeddings natively."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It focuses exclusively on image feature vectors and does not support text embeddings."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Contradicted: text embeddings are explicitly referenced as an example use case."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It is a standalone product separate from SAP HANA Cloud, designed only for vector math experiments."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Incorrect: it is a feature of SAP HANA Cloud, not a separate standalone product, and supports integrated data processing."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It measures similarity solely by Euclidean distance and ignores angular relationships between vectors."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context references similarity via the angle between vectors (directional similarity), not exclusively Euclidean distance."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["hana", "vectors", "embeddings", "multimodel", "similarity"],
      "concept_tags": [
        "SAP HANA Vector Engine",
        "multimodel processing",
        "text embeddings",
        "vector similarity"
      ],
      "context_tags": ["HANA Cloud", "semantic search", "vector analysis"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Identify claims tied to multimodel integration within SAP HANA Cloud."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Recall how similarity is described with respect to vector angles."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think MAVEN: Multimodel + ANalytics of Vectors in ENgine."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The engine is described as a feature of SAP HANA Cloud that stores, processes, and analyzes high-dimensional vectors (e.g., text embeddings) as part of multimodel processing, and it references angular similarity concepts."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How does integrating vectors with relational or document data benefit semantic applications?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Storing text embeddings with HR documents enables similarity search that leverages both vector and document store data."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u13_t2_mcq_001",
      "type": "mcq",
      "unit_id": "u13",
      "topic_id": "u13_t2-grounding-architecture",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which component primarily handles preprocessing, chunking, and embedding of incoming documents in the grounding architecture?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The described grounding setup includes a Document Store and a Generative AI Hub with stages that transform documents and enable retrieval augmented generation using a vector engine."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Data Ingestion stage within the Generative AI Hub"
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states that incoming documents undergo preprocessing, chunking, and embedding during data ingestion."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Document Store"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The Document Store houses documents; it is not described as performing preprocessing or embeddings."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "SAP HANA Cloud vector engine"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The vector engine enhances contextual relevance and supports retrieval, not the ingestion preprocessing steps."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Pipeline API in SAP AI Core"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It is mentioned as being proxied through SAP AI Core, not as the component doing chunking and embedding."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Generative model within the LLM"
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The LLM generates text; the preprocessing, chunking, and embedding are part of ingestion, not generation."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["grounding", "architecture", "retrieval"],
      "concept_tags": ["data_ingestion", "document_store", "vector_engine"],
      "context_tags": ["SAP_HANA", "Generative_AI_Hub"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Identify the stage that transforms raw documents before retrieval."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Differentiate storage from processing responsibilities."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Ingest then index: ingestion does the prep; storage just stores."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "According to the description, the Data Ingestion stage of the Generative AI Hub performs preprocessing, chunking, and embedding to enable effective retrieval and grounded generation."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How do chunking and embedding during ingestion support later retrieval steps?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A PDF enters the system, is split into passages, embedded as vectors, and then stored for retrieval during question answering."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u13_t3_mcq_001",
      "type": "mcq",
      "unit_id": "u13",
      "topic_id": "u13_t3-grounding-features",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which action best prepares data for the Grounding module in an orchestration workflow?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The generative AI hub supports document grounding with access to multiple LLMs, vector stores (e.g., managed SAP HANA), and a process to create a vector knowledge base before using the Grounding step. Users can either upload documents to a supported repository and run a data pipeline to vectorize them, or use a Vector API to provide document chunks."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Create a vector knowledge base by uploading documents and running the data pipeline to vectorize them."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context states that preparing a knowledge base via document upload followed by vectorization is a provided option before using Grounding."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Skip knowledge base preparation and rely solely on the default LLM without any document vectors."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Grounding requires a prepared knowledge base; relying only on an LLM is not described as the grounding approach."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Replace the vector store with a relational-only store and avoid vectorization entirely."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context emphasizes vector stores and vectorization; avoiding them contradicts the described process."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Only configure provider credentials for the SDK without preparing any document data."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Credentials alone are not described as sufficient preparation for the Grounding module."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Use the Vector API to stream model outputs back into the LLM for fine-tuning."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The Vector API is mentioned for providing document chunks, not for fine-tuning LLMs with outputs."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["grounding", "knowledge-base", "vectorization", "workflow"],
      "concept_tags": ["document_grounding", "vector_knowledge_base"],
      "context_tags": ["SAP_AI_Launchpad", "orchestration"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for steps mentioned before using the Grounding module."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on options that involve vectorization or the Vector API."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Grounding needs ground to stand on—build vectors first."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The text specifies preparing a vector knowledge base before Grounding by either uploading documents and running a vectorization pipeline or using the Vector API to provide chunks."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Compare how uploading documents vs. using the Vector API might fit different data ingestion scenarios."
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A team uploads policy PDFs to a repository, runs the pipeline to vectorize them, and then enables Grounding in their orchestration flow."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u13_t4_opt1_pipeline",
      "type": "mcq",
      "unit_id": "u13",
      "topic_id": "u13_t4-grounding-options",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "In “Option 1,” which action is explicitly part of the initial setup before running the data pipeline?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Option 1 describes uploading documents to a supported repository, chunking data, generating embeddings, and storing them in a vector database. It also mentions preliminary administrative preparation and prerequisites for orchestration-compatible deployments."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Create a Resource Group for Grounding as a one-time administrative step."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text states an initial one-time administrative step is to create a Resource Group for Grounding."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Train a custom embedding model from scratch within the pipeline."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text mentions generating embeddings, not training a custom embedding model from scratch."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Deploy a new vector database engine developed specifically for this project."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text says embeddings are stored in a vector database but does not require deploying a new custom engine."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Manually annotate each chunk with labels before embeddings are generated."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Chunking and embedding are described, but no manual labeling requirement is stated."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Disable orchestration services to avoid interference during setup."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text requires at least one orchestration-compatible deployment, not disabling orchestration."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["grounding", "pipelines", "setup"],
      "concept_tags": ["resource_group", "vector_database", "embeddings"],
      "context_tags": ["Option_1", "administrative_setup"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Look for a one-time administrative prerequisite mentioned before pipeline execution."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Differentiate between required setup and tasks the pipeline performs automatically."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think: “Group before Grounding”—create the group, then ground the data."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Option 1 outlines an initial administrative requirement to create a Resource Group for Grounding, followed by chunking and embedding steps and storage in a vector database."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "What other prerequisites are noted for orchestration before using the pipeline?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Before uploading documents and generating embeddings, ensure the Resource Group for Grounding exists."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u13_t5_001",
      "type": "mcq",
      "unit_id": "u13",
      "topic_id": "u13_t5-grounded-orchestration-code",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Based on the orchestration example, what does the code ultimately print after running the service with the user query to list customer-reported issues?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The snippet configures an orchestration service with an LLM and a template value for a user query requesting a list of customer-reported issues, then prints the first choice’s message content from the orchestration result."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "A list mentioning noise, landscaping, window cleaning, and AC malfunction from the repository."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The provided output explicitly lists these issues as the printed result."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "A confirmation that the vector knowledge base was created successfully."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Creation of a vector knowledge base is noted in the conclusion, not as the printed run output."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The full configuration object used by the orchestration service."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The code prints the first choice’s message content, not the config object."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Embedding vectors stored in the SAP HANA Cloud vector engine."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Embeddings are described conceptually, but they are not what the code prints."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "An error message indicating the grounding filter failed to initialize."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "There is no mention of an error; the sample shows a successful printed list of issues."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": ["orchestration", "llm", "grounding", "outputs"],
      "concept_tags": [
        "orchestration_service",
        "template_value",
        "printed_output"
      ],
      "context_tags": ["code_run_result", "customer_issues"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Focus on what print(response.orchestration_result.choices[0].message.content) would output."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Differentiate between explanatory conclusion text and the actual printed run result."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Think: run → choice[0] → message.content → printed issues."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The example shows the service returning and printing a list of customer-reported issues—noise, landscaping, window cleaning, and AC malfunction—when invoked with the specified query."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "How would the printed output change if the user_query asked for a different category of reported issues?"
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "If the query requested maintenance complaints, the printed content would list those relevant issues instead."
            }
          ]
        }
      ]
    },
    {
      "id": "q_u13_t6_mcq_001",
      "type": "mcq",
      "unit_id": "u13",
      "topic_id": "u13_t6-grounding-summary",
      "question_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Which statement best captures how the generative AI hub supports grounded, business-impacting AI solutions according to the summary?"
            }
          ]
        }
      ],
      "context_rich": [
        {
          "type": "callout",
          "variant": "info",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The summary mentions embeddings for semantic retrieval, document grounding with an engine to improve relevance and accuracy, an abstraction layer to access multiple LLMs, and outcomes like efficiency, cost reduction, and improved customer experiences."
                }
              ]
            }
          ]
        }
      ],
      "choices": [
        {
          "id": "A",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It combines embedding models with a vector engine and an abstraction layer over multiple LLMs to deliver contextually accurate responses that support operational and customer-focused outcomes."
                }
              ]
            }
          ],
          "is_correct": true,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Matches the text: embeddings + SAP HANA Cloud vector engine for grounding, and an abstraction layer to access many LLMs, leading to efficiency, cost reduction, and enhanced customer experience."
                }
              ]
            }
          ]
        },
        {
          "id": "B",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It replaces embeddings entirely with rule-based filters to ensure deterministic outputs across all LLMs."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The text emphasizes embeddings and a vector engine, not replacing them with rule-based filters or guaranteeing determinism."
                }
              ]
            }
          ]
        },
        {
          "id": "C",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It relies solely on proprietary LLMs within a single provider to maintain accuracy."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The hub serves as an abstraction layer to access a wide range of LLMs from various providers, not a single provider."
                }
              ]
            }
          ]
        },
        {
          "id": "D",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It focuses on image generation quality rather than semantic retrieval or grounding for text responses."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "The context highlights semantic retrieval, document grounding, and response accuracy, not image generation quality."
                }
              ]
            }
          ]
        },
        {
          "id": "E",
          "text_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "It improves accuracy exclusively through post-processing heuristics after the model response is produced."
                }
              ]
            }
          ],
          "is_correct": false,
          "rationale_rich": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Accuracy is enhanced via document grounding using embeddings and a vector engine, not exclusively through post-processing heuristics."
                }
              ]
            }
          ]
        }
      ],
      "difficulty": 2,
      "tags": [
        "grounding",
        "embeddings",
        "vector-search",
        "llm-abstraction",
        "business-impact"
      ],
      "concept_tags": [
        "document-grounding",
        "embeddings",
        "LLM-abstraction-layer"
      ],
      "context_tags": ["SAP HANA Cloud vector engine", "generative AI hub"],
      "hints_rich": [
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Identify the components mentioned together: embeddings, vector engine, and abstraction over multiple LLMs."
                }
              ]
            }
          ]
        },
        {
          "type": "callout",
          "variant": "tip",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "text": "Link technical mechanisms (grounding and retrieval) to stated business outcomes."
                }
              ]
            }
          ]
        }
      ],
      "mnemonic_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "AVA: Abstraction over LLMs + Vector engine + (semantic) embeddings enable grounded Answers."
            }
          ]
        }
      ],
      "explanation_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "The summary ties embeddings and the SAP HANA Cloud vector engine to document grounding, and positions the generative AI hub as an abstraction layer over multiple LLMs, collectively driving accuracy and business outcomes."
            }
          ]
        }
      ],
      "elaboration_prompts_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "Explain how document grounding with embeddings differs from relying on a single LLM without external context."
            }
          ]
        }
      ],
      "shuffle": true,
      "grading": {
        "mode": "mcq",
        "partial_credit": false,
        "penalty": 0,
        "require_all_correct": false
      },
      "example_rich": [
        {
          "type": "paragraph",
          "children": [
            {
              "text": "A customer support assistant retrieves relevant company policies via embeddings and grounding, then uses an LLM through the hub to provide accurate answers."
            }
          ]
        }
      ]
    }
  ]
}
